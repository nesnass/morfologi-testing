{"version":3,"sources":["_references.ts","app.config.ts","app.constants.ts","MorfApp.bundle.js","app.run.ts","models/models.ts","services/nettskjemaService.ts","services/dataService.ts","components/resizewindow/resize.ts","tasks/task1/controller.ts","app.ts","services/serverService.ts","components/videoplayer/videoplayer.ts","tasks/task3/controller.ts","tasks/task2/controller.ts","tasks/task5/controller.ts","tasks/task6/controller.ts","views/mainpanel/mainpanel.ts","views/testpanel/testpanel.ts"],"names":[],"mappings":"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","file":"MorfApp.bundle.js","sourcesContent":["/// <reference path=\"../typings/index.d.ts\"/>","/// <reference path=\"_references.ts\"/>\n\nnamespace MorfologiApp {\n    \"use strict\";\n\n    /**\n     * Application-wide overall configuration\n     * @param $stateProvider  Used for ionic internal routing.g /reward\n     * @param $urlRouterProvider  Used for defining default route.\n     * @param $httpProvider  Used for registering an interceptor (TokenInterceptor).\n     */\n    export function configApp($stateProvider: ng.ui.IStateProvider, $urlRouterProvider: ng.ui.IUrlRouterProvider,\n                              $httpProvider: ng.IHttpProvider, $controllerProvider: ng.IControllerProvider,\n                              $sceDelegateProvider: ng.ISCEDelegateProvider,\n                              $translateProvider: angular.translate.ITranslateProvider ) {\n        $stateProvider\n            .state(\"main\", {\n                name: \"main\",\n                url: \"/main\",\n                templateUrl: \"./js/views/mainpanel/mainpanel.html\"\n            })\n            .state(\"tasks\", {\n                name: \"test\",\n                url: \"/test\",\n                templateUrl: \"./js/views/testpanel/testpanel.html\"\n            });\n\n        $urlRouterProvider.otherwise(\"/main\");\n        $httpProvider.defaults.withCredentials = true;\n        $sceDelegateProvider.resourceUrlWhitelist([\n            \"self\",\n            \"https://nettskjema.uio.no/**\",\n            \"cdvfile://localhost/documents/**\",\n            \"file:///var/**\"\n        ]);\n\n\n        // Translation\n        $translateProvider.useSanitizeValueStrategy(\"escaped\");\n        $translateProvider.useStaticFilesLoader({\n            prefix: \"./languages/\",\n            suffix: \".json\"\n        });\n\n        let lang = null;\n        if (navigator[\"languages\"]) {\n            lang = navigator[\"languages\"][0];\n        } else {\n            lang = navigator.language || navigator.userLanguage;\n        }\n\n        if (lang.indexOf(\"nn\") > -1 || lang.indexOf(\"nb\") > -1) {\n            $translateProvider.preferredLanguage(\"nb\");\n            sessionStorage[\"lang\"] = \"nb\";\n        } else {\n            $translateProvider.preferredLanguage(\"en\");\n            sessionStorage[\"lang\"] = \"en\";\n        }\n\n        // Force to norwegian - remove if using multiple languages\n        $translateProvider.preferredLanguage(\"nb\");\n\n    }\n\n    configApp.$inject = [\"$stateProvider\", \"$urlRouterProvider\", \"$httpProvider\",\n            \"$controllerProvider\", \"$sceDelegateProvider\", \"$translateProvider\"];\n\n}\n","/// <reference path=\"_references.ts\"/>\n\nnamespace MorfologiApp {\n    \"use strict\";\n\n    export interface IMorfologiConstants {\n        constants: {};\n    }\n\n    export class MorfologiConstants {\n        public static get constants() {\n\n            // Release number should be updated accordingly on new app releases  e.g.  isp_setup_r1.json, isp_storage_r1_sample.json\n            return {\n                USER_FILE: \"samples/users.json\",\n                SESSION_FILE: \"samples/sessions.json\",\n                MORF_FILE: \"samples/morfer.json\",\n            };\n        };\n    }\n}\n","/// <reference path=\"../typings/index.d.ts\"/> \n\n/// <reference path=\"_references.ts\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    \"use strict\";\n    /**\n     * Application-wide overall configuration\n     * @param $stateProvider  Used for ionic internal routing.g /reward\n     * @param $urlRouterProvider  Used for defining default route.\n     * @param $httpProvider  Used for registering an interceptor (TokenInterceptor).\n     */\n    function configApp($stateProvider, $urlRouterProvider, $httpProvider, $controllerProvider, $sceDelegateProvider, $translateProvider) {\n        $stateProvider\n            .state(\"main\", {\n            name: \"main\",\n            url: \"/main\",\n            templateUrl: \"./js/views/mainpanel/mainpanel.html\"\n        })\n            .state(\"tasks\", {\n            name: \"test\",\n            url: \"/test\",\n            templateUrl: \"./js/views/testpanel/testpanel.html\"\n        });\n        $urlRouterProvider.otherwise(\"/main\");\n        $httpProvider.defaults.withCredentials = true;\n        $sceDelegateProvider.resourceUrlWhitelist([\n            \"self\",\n            \"https://nettskjema.uio.no/**\",\n            \"cdvfile://localhost/documents/**\",\n            \"file:///var/**\"\n        ]);\n        // Translation\n        $translateProvider.useSanitizeValueStrategy(\"escaped\");\n        $translateProvider.useStaticFilesLoader({\n            prefix: \"./languages/\",\n            suffix: \".json\"\n        });\n        var lang = null;\n        if (navigator[\"languages\"]) {\n            lang = navigator[\"languages\"][0];\n        }\n        else {\n            lang = navigator.language || navigator.userLanguage;\n        }\n        if (lang.indexOf(\"nn\") > -1 || lang.indexOf(\"nb\") > -1) {\n            $translateProvider.preferredLanguage(\"nb\");\n            sessionStorage[\"lang\"] = \"nb\";\n        }\n        else {\n            $translateProvider.preferredLanguage(\"en\");\n            sessionStorage[\"lang\"] = \"en\";\n        }\n        // Force to norwegian - remove if using multiple languages\n        $translateProvider.preferredLanguage(\"nb\");\n    }\n    MorfologiApp.configApp = configApp;\n    configApp.$inject = [\"$stateProvider\", \"$urlRouterProvider\", \"$httpProvider\",\n        \"$controllerProvider\", \"$sceDelegateProvider\", \"$translateProvider\"];\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"_references.ts\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    \"use strict\";\n    var MorfologiConstants = (function () {\n        function MorfologiConstants() {\n        }\n        Object.defineProperty(MorfologiConstants, \"constants\", {\n            get: function () {\n                // Release number should be updated accordingly on new app releases  e.g.  isp_setup_r1.json, isp_storage_r1_sample.json\n                return {\n                    USER_FILE: \"samples/users.json\",\n                    SESSION_FILE: \"samples/sessions.json\",\n                    MORF_FILE: \"samples/morfer.json\",\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        return MorfologiConstants;\n    }());\n    MorfologiApp.MorfologiConstants = MorfologiConstants;\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"_references.ts\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    \"use strict\";\n    /**\n     * Application-wide overall run function\n     * @param $window  Used for configuring cordova plugins options.\n     * @param $location  Re-route if storage is reloaded\n     */\n    function runApp($window, $location) {\n    }\n    MorfologiApp.runApp = runApp;\n    runApp.$inject = [\"$window\", \"$location\", \"DataService\"];\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../_references.ts\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    \"use strict\";\n    var Morf = (function () {\n        function Morf(key, root, morphed, position) {\n            this.key = key;\n            this.root = root;\n            this.morphed = morphed;\n            this.position = position;\n        }\n        return Morf;\n    }());\n    MorfologiApp.Morf = Morf;\n    // Represents one task in a set that is produced for a user session\n    var Task = (function () {\n        function Task() {\n            this.morf = null;\n            this.template = 0;\n            this.completed = false;\n            this.attempts = 0;\n            this.answeredCorrectly = false;\n        }\n        Task.prototype.begin = function () {\n            this.started = new Date();\n        };\n        Task.prototype.attempt = function () {\n            this.attempts++;\n        };\n        Task.prototype.complete = function (correctlyAnswered) {\n            this.completed = true;\n            this.answeredCorrectly = correctlyAnswered;\n            this.finished = new Date();\n            var startedOn = moment(this.started);\n            var finishedOn = moment(this.finished);\n            this.duration = moment.duration(finishedOn.diff(startedOn)).asSeconds();\n        };\n        return Task;\n    }());\n    MorfologiApp.Task = Task;\n    // This holds a construction of the tasks the user will go through in the current session\n    var Session = (function () {\n        function Session(name, shuffle, unforgiving) {\n            this.name = name;\n            this.shuffle = shuffle;\n            this.unforgiving = unforgiving;\n            this.tasks = [];\n            this.inactivePeriods = [];\n            this.selectedTask = 0;\n            this.started = null;\n            this.finished = null;\n            this.duration = 0;\n        }\n        Session.prototype.selectTask = function (index) {\n            if (index > -1 && index < this.tasks.length) {\n                this.selectedTask = index;\n            }\n        };\n        Session.prototype.begin = function () {\n            this.started = new Date();\n        };\n        Session.prototype.complete = function () {\n            this.finished = new Date();\n            var startedOn = moment(this.started);\n            var finishedOn = moment(this.finished);\n            this.duration = moment.duration(finishedOn.diff(startedOn)).asSeconds();\n        };\n        // Record inactive period if above a specified duration\n        Session.prototype.inactive = function (duration) {\n            if (duration > 30) {\n                this.inactivePeriods.push(duration);\n            }\n        };\n        Session.prototype.completeSelectedTask = function (correctlyAnswered) {\n            this.tasks[this.selectedTask].complete(correctlyAnswered);\n        };\n        Session.fromData = function (data) {\n            return new this(data.name, data.shuffle, data.unforgiving);\n        };\n        return Session;\n    }());\n    MorfologiApp.Session = Session;\n    var Avatar = (function () {\n        function Avatar() {\n        }\n        return Avatar;\n    }());\n    MorfologiApp.Avatar = Avatar;\n    var User = (function () {\n        function User(username, sessionId) {\n            this.username = username;\n            this.sessionId = sessionId;\n            this.userID = \"\";\n            this.avatar = null;\n            this.seenMorfs = [];\n        }\n        return User;\n    }());\n    MorfologiApp.User = User;\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../_references.ts\"/>\n/// <reference path=\"../app.constants.ts\"/>\n/// <reference path=\"../models/models.ts\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Services;\n    (function (Services) {\n        \"use strict\";\n        var NettskjemaService = (function () {\n            function NettskjemaService($http) {\n                this.$http = $http;\n                this.token = \"\";\n                this.UUID = \"\";\n            }\n            NettskjemaService.prototype.setNettskjemaToken = function (token) {\n                this.token = token;\n            };\n            NettskjemaService.prototype.postTrackingDataItem = function (item, sFunc, eFunc) {\n                var _this = this;\n                var postItem = function (item, audio_file) {\n                    var form_data = item.asFormDataWithAttachment(audio_file, _this.UUID);\n                    _this.$http.post(\"https://nettskjema.uio.no/answer/deliver.json?formId=74195\", form_data, {\n                        transformRequest: angular.identity,\n                        headers: {\n                            \"Content-Type\": undefined,\n                            \"NETTSKJEMA_CSRF_PREVENTION\": _this.token\n                        }\n                    }).then(function (success) {\n                        var data = success.data;\n                        if (success.status !== 200 || data.indexOf(\"success\") === -1 || data.indexOf(\"failure\") > -1) {\n                            eFunc(data);\n                        }\n                        else {\n                            item.markAsSynced();\n                            sFunc(data);\n                        }\n                    }, function () {\n                        eFunc(\"Error sending usage data to server - no status response\");\n                    });\n                };\n                postItem(item, null);\n            };\n            NettskjemaService.$inject = [\"$http\", \"CordovaService\"];\n            return NettskjemaService;\n        }());\n        Services.NettskjemaService = NettskjemaService;\n    })(Services = MorfologiApp.Services || (MorfologiApp.Services = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../_references\"/>\n/// <reference path=\"../app.constants.ts\"/>\n/// <reference path=\"../models/models\"/>\n/// <reference path=\"./nettskjemaService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Services;\n    (function (Services) {\n        \"use strict\";\n        var DataService = (function () {\n            function DataService($http, $window, $timeout, nettsckjemaService, constants) {\n                var _this = this;\n                this.$http = $http;\n                this.$window = $window;\n                this.$timeout = $timeout;\n                this.nettsckjemaService = nettsckjemaService;\n                this.constants = constants;\n                this.currentLanguage = \"en\";\n                this.setupComplete = false;\n                this.morfer = {};\n                this.status = {\n                    online: navigator.onLine || false,\n                    posting_data: false,\n                    unsynced_data: false\n                };\n                this.$window.addEventListener(\"offline\", function () {\n                    _this.status.online = false;\n                }, false);\n                this.$window.addEventListener(\"online\", function () {\n                    if (!_this.status.online) {\n                        _this.status.online = true;\n                        _this.automaticallySendData();\n                    }\n                }, false);\n                this.activateTaskStartCallback = null;\n                this.activateTaskEndCallback = null;\n            }\n            DataService.prototype.getStatus = function () {\n                return this.status;\n            };\n            DataService.prototype.automaticallySendData = function () {\n                this.attemptToPostUsageData();\n            };\n            // Make an attempt to post any new usage data to Nettskjema\n            DataService.prototype.attemptToPostUsageData = function () {\n                var _this = this;\n                // If we receive a token, and are running on tablet, it is safe to assume we can then post to Nettskjema\n                this.$http.get(\"http://nettskjema.uio.no/ping.html\")\n                    .then(function (success) {\n                    console.log(\"Connected to Nettskjema\");\n                    _this.nettsckjemaService.setNettskjemaToken(success.data.toString());\n                    if (_this.status.unsynced_data && !_this.status.posting_data) {\n                        _this.postUsageData();\n                    }\n                }, function () {\n                    _this.status.online = false;\n                    console.log(\"Unable to connect to Nettskjema\");\n                });\n            };\n            DataService.prototype.setupAfterLogin = function () {\n                var _this = this;\n                if (!this.setupComplete) {\n                    // Load session and morf files\n                    this.$http.get(this.constants.constants[\"MORF_FILE\"])\n                        .then(function (morfData) {\n                        console.log(\"Loaded morf file\");\n                        _this.morfer = morfData;\n                        _this.$http.get(_this.constants.constants[\"SESSION_FILE\"])\n                            .then(function (sessionData) {\n                            console.log(\"Loaded session file\");\n                            if (sessionData.hasOwnProperty(_this.user.sessionId)) {\n                                _this.session = MorfologiApp.Session.fromData(sessionData[_this.user.sessionId]);\n                                _this.createTasks();\n                            }\n                            _this.setupComplete = true;\n                        }, function () {\n                            console.log(\"Unable to load morf file\");\n                        });\n                    }, function () {\n                        console.log(\"Unable to load sessions file\");\n                    });\n                }\n            };\n            DataService.prototype.login = function (username) {\n                var _this = this;\n                this.$http.get(this.constants.constants[\"USER_FILE\"])\n                    .then(function (users) {\n                    console.log(\"Loaded user file\");\n                    if (users.hasOwnProperty(username)) {\n                        _this.user = new MorfologiApp.User(username, users[username][\"sessionId\"]);\n                        _this.setupAfterLogin();\n                    }\n                }, function () {\n                    console.log(\"Unable to load user file\");\n                });\n            };\n            DataService.prototype.createTasks = function () {\n            };\n            DataService.prototype.getResizableDivSize = function () {\n                return this.resizableDivSize;\n            };\n            DataService.prototype.setResizableDivSize = function (newSize) {\n                this.resizableDivSize = newSize;\n            };\n            DataService.prototype.getLanguage = function () {\n                return this.currentLanguage;\n            };\n            ;\n            DataService.prototype.setLanguage = function (type) {\n                this.currentLanguage = type;\n            };\n            ;\n            DataService.prototype.postUsageData = function () {\n                var _this = this;\n                this.status.posting_data = true;\n                var postData = [];\n                var postRemainingData = function () {\n                    if (postData.length > 0) {\n                        _this.nettsckjemaService.postTrackingDataItem(postData.pop(), function (data) {\n                            console.log(\"Successful Nettskjema submission: \" + data);\n                            postRemainingData();\n                        }, function (data) {\n                            console.log(\"Error during Nettskjema submission: \" + data);\n                        });\n                    }\n                    else {\n                        _this.status.posting_data = false;\n                        _this.status.unsynced_data = false;\n                    }\n                };\n                postRemainingData();\n            };\n            DataService.prototype.setupAudioIntroduction = function (url) {\n                var _this = this;\n                if (typeof this.introductionAudio !== \"undefined\") {\n                    this.introductionAudio.pause();\n                }\n                this.$timeout(function () {\n                    _this.introductionAudio = new Audio(url);\n                    _this.introductionAudio.load();\n                    _this.introductionAudio.addEventListener(\"ended\", function () {\n                        _this.disableInteractionCallback(false, true);\n                        if (_this.activateTaskEndCallback !== null) {\n                            _this.activateTaskEndCallback();\n                        }\n                    });\n                }, 0);\n            };\n            DataService.prototype.playAudioIntroduction = function (delay) {\n                var _this = this;\n                if (delay > 0) {\n                    this.disableInteractionCallback(true, true);\n                }\n                this.$timeout(function () {\n                    if (_this.activateTaskStartCallback !== null) {\n                        _this.activateTaskStartCallback();\n                    }\n                    try {\n                        _this.introductionAudio.play();\n                    }\n                    catch (error) {\n                        console.log(\"No introduction audio source found\");\n                        _this.disableInteractionCallback(false, true);\n                        if (_this.activateTaskEndCallback !== null) {\n                            _this.activateTaskEndCallback();\n                        }\n                    }\n                }, delay);\n            };\n            DataService.prototype.setDisableInteractionCallback = function (callback) {\n                this.disableInteractionCallback = callback;\n            };\n            DataService.prototype.setInteractionEndActivateTaskCallback = function (callback) {\n                this.activateTaskEndCallback = callback;\n            };\n            DataService.prototype.clearInteractionEndActivateTaskCallback = function () {\n                this.activateTaskEndCallback = null;\n            };\n            DataService.prototype.setInteractionStartActivateTaskCallback = function (callback) {\n                this.activateTaskStartCallback = callback;\n            };\n            DataService.prototype.externalCallDisableInteractionCallback = function (setMe, showSpeaker) {\n                if (this.disableInteractionCallback !== null) {\n                    this.disableInteractionCallback(setMe, showSpeaker);\n                }\n            };\n            // Return a new array that is a shuffle of the provided array\n            DataService.prototype.shuffleArray = function (array) {\n                var newArray = angular.copy(array);\n                var currentIndex = newArray.length, temporaryValue, randomIndex;\n                // While there remain elements to shuffle...\n                while (0 !== currentIndex) {\n                    // Pick a remaining element...\n                    randomIndex = Math.floor(Math.random() * currentIndex);\n                    currentIndex -= 1;\n                    // And swap it with the current element.\n                    temporaryValue = newArray[currentIndex];\n                    newArray[currentIndex] = newArray[randomIndex];\n                    newArray[randomIndex] = temporaryValue;\n                }\n                return newArray;\n            };\n            DataService.$inject = [\"$http\", \"$window\", \"$timeout\", \"NettskjemaService\", \"MorfologiConstants\"];\n            return DataService;\n        }());\n        Services.DataService = DataService;\n    })(Services = MorfologiApp.Services || (MorfologiApp.Services = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../_references.ts\"/>\n/// <reference path=\"../../services/dataService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Directives;\n    (function (Directives) {\n        \"use strict\";\n        var ResizeController = (function () {\n            function ResizeController(dataService, $window) {\n                this.dataService = dataService;\n                this.$window = $window;\n            }\n            ;\n            ResizeController.$inject = [\"DataService\", \"$window\"];\n            return ResizeController;\n        }());\n        function linker(scope, element, ctrl) {\n            var w = angular.element(ctrl.$window);\n            scope.getWindowDimensions = function () {\n                return {\n                    \"VIEW_HEIGHT\": element.prop(\"offsetHeight\"),\n                    \"VIEW_WIDTH\": element.prop(\"offsetWidth\")\n                };\n            };\n            scope.$watch(scope.getWindowDimensions, function (newValue) {\n                ctrl.dataService.setResizableDivSize(newValue);\n            }, true);\n            w.bind(\"resize\", function () {\n                scope.$apply();\n            });\n            ctrl.dataService.setResizableDivSize(scope.getWindowDimensions());\n        }\n        function ispResize() {\n            return {\n                restrict: \"A\",\n                controller: ResizeController,\n                link: linker\n            };\n        }\n        Directives.ispResize = ispResize;\n    })(Directives = MorfologiApp.Directives || (MorfologiApp.Directives = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Controllers;\n    (function (Controllers) {\n        \"use strict\";\n        var Task1Controller = (function () {\n            function Task1Controller($scope, $timeout, dataService) {\n                var _this = this;\n                this.$scope = $scope;\n                this.$timeout = $timeout;\n                this.dataService = dataService;\n                this.opacity = 0;\n                // this.setupItems();\n                $timeout(function () {\n                    _this.opacity = 1;\n                }, 1000);\n            }\n            Task1Controller.$inject = [\"$scope\", \"$timeout\", \"DataService\"];\n            return Task1Controller;\n        }());\n        Controllers.Task1Controller = Task1Controller;\n    })(Controllers = MorfologiApp.Controllers || (MorfologiApp.Controllers = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"_references\"/>\n/// <reference path=\"./app.config.ts\"/>\n/// <reference path=\"./app.constants.ts\"/>\n/// <reference path=\"./app.run.ts\"/>\n/// <reference path=\"components/resizewindow/resize\"/>\n/// <reference path=\"tasks/task1/controller\"/>\n/**\n * Morfologi core application module.\n * @preferred\n */\nvar MorfologiApp;\n(function (MorfologiApp) {\n    \"use strict\";\n    /**\n     * Array of dependencies to be injected in the application \"dependencies\".\n     */\n    var dependencies = [\n        \"ui.router\",\n        \"pascalprecht.translate\",\n        \"ngDraggable\",\n        \"angular-flippy\"\n    ];\n    angular.module(\"MorfologiApp\", dependencies)\n        .constant(\"MorfologiConstants\", MorfologiApp.MorfologiConstants)\n        .service(MorfologiApp.Services)\n        .directive(MorfologiApp.Directives)\n        .controller(MorfologiApp.Controllers)\n        .config(MorfologiApp.configApp)\n        .run(MorfologiApp.runApp);\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../_references.ts\"/>\n/// <reference path=\"../models/models\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Services;\n    (function (Services) {\n        \"use strict\";\n        var ServerService = (function () {\n            function ServerService($window, $timeout) {\n                this.$window = $window;\n                this.$timeout = $timeout;\n            }\n            ServerService.$inject = [\"$window\", \"$timeout\"];\n            return ServerService;\n        }());\n        Services.ServerService = ServerService;\n    })(Services = MorfologiApp.Services || (MorfologiApp.Services = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../_references.ts\"/>\n/// <reference path=\"../../services/dataService\"/>\n/**\n * On click, plays a video\n * On end, activates the next task\n *\n * Use this directive in the form:\n * <div isp-video-player></div>\n */\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Directives;\n    (function (Directives) {\n        \"use strict\";\n        var VideoPlayerController = (function () {\n            function VideoPlayerController(isolatedScope, $sce) {\n                var _this = this;\n                this.isolatedScope = isolatedScope;\n                this.$sce = $sce;\n                this.posterUrl = \"\";\n                this.videoUrl = \"\";\n                this.playing = false;\n                this.playImage = \"1\";\n                this.videoUrl = this.$sce.getTrustedResourceUrl(this.isolatedScope.ispVideoUrl);\n                this.posterUrl = this.isolatedScope.ispPosterUrl;\n                if (typeof this.isolatedScope.ispType !== \"undefined\" && this.isolatedScope.ispType != null) {\n                    if (this.isolatedScope.ispType === \"task8\") {\n                        this.playImage = \"2\";\n                    }\n                    else if (this.isolatedScope.ispType === \"none\") {\n                        this.playImage = \"\";\n                    }\n                    else {\n                        this.playImage = \"1\";\n                    }\n                }\n                isolatedScope.$watch(function () { return isolatedScope.ispActive[\"playing\"]; }, function (newValue) {\n                    if (newValue === true) {\n                        if (isolatedScope.ispActive[\"playing\"] === true) {\n                            _this.playVideo();\n                        }\n                    }\n                });\n            }\n            ;\n            VideoPlayerController.prototype.playVideo = function () {\n                if (this.isolatedScope.ispActive[\"active\"]) {\n                    this.playing = true;\n                    this.video.load();\n                    this.video.play();\n                    this.isolatedScope.ispOnPlay();\n                }\n            };\n            VideoPlayerController.$inject = [\"$scope\", \"$sce\"];\n            return VideoPlayerController;\n        }());\n        function linker(isolatedScope, element, attributes, ctrl) {\n            var c = element.children();\n            ctrl.video = c[0];\n            ctrl.video.autoplay = false;\n            ctrl.video.addEventListener(\"ended\", function () {\n                ctrl.playing = false;\n                isolatedScope.ispActive[\"playing\"] = false;\n                isolatedScope.ispOnCompleted();\n                isolatedScope.$digest();\n            });\n        }\n        // directive declaration\n        function ispVideoPlayer() {\n            return {\n                restrict: \"A\",\n                controller: VideoPlayerController,\n                controllerAs: \"vpC\",\n                replace: true,\n                templateUrl: \"js/components/videoplayer/videoplayer.html\",\n                scope: {\n                    ispVideoUrl: \"@\",\n                    ispPosterUrl: \"@\",\n                    ispOnCompleted: \"&\",\n                    ispActive: \"=\",\n                    ispOnPlay: \"&\",\n                    ispType: \"@\"\n                },\n                link: linker\n            };\n        }\n        Directives.ispVideoPlayer = ispVideoPlayer;\n        // Html5 video fix\n        function html5videofix() {\n            return {\n                restrict: \"A\",\n                link: function (isolatedScope, element, attr) {\n                    attr.$set(\"src\", attr[\"vsrc\"]);\n                    attr.$set(\"poster\", attr[\"psrc\"]);\n                    attr.$set(\"autoplay\", false);\n                    attr.$set(\"webkit-playsinline\", \"\");\n                    attr.$set(\"playsinline\", \"\");\n                }\n            };\n        }\n        Directives.html5videofix = html5videofix;\n    })(Directives = MorfologiApp.Directives || (MorfologiApp.Directives = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Controllers;\n    (function (Controllers) {\n        \"use strict\";\n        var Task3Controller = (function () {\n            function Task3Controller($scope, $timeout, dataService) {\n                this.$scope = $scope;\n                this.$timeout = $timeout;\n                this.dataService = dataService;\n                this.iHeight = 111;\n                this.iWidth = 148;\n                this.page = 1;\n                this.round = 0;\n                this.bounce = false;\n                this.familyCharacter = \"\";\n                this.droppedObjects = [];\n                this.draggableObjects1 = [];\n                this.draggableObjects2 = [];\n                this.draggableObjects3 = [];\n                this.vanIsClosed = false;\n                this.activatePointer = false;\n                this.kangarooData = [\n                    {\n                        body: {\n                            width: \"500px\",\n                            bottom: \"100px\",\n                            left: \"-80px\"\n                        },\n                        pouch: {\n                            width: \"150px\",\n                            height: \"150px\",\n                            left: \"70px\",\n                            top: \"300px\"\n                        },\n                        pointer: {\n                            left: \"100px\",\n                            top: \"400px\"\n                        },\n                        pageThreeData: {\n                            \"code\": \"zoomable-image\",\n                            \"id\": 11,\n                            \"sequence\": -1,\n                            \"description\": \"kangaroo jumps off screen\",\n                            \"start\": {\n                                \"x\": -50,\n                                \"y\": 250,\n                                \"w\": 400,\n                                \"h\": 400\n                            },\n                            \"transition\": {\n                                \"x\": 1900,\n                                \"y\": 800,\n                                \"scale\": 1,\n                                \"duration\": 4\n                            },\n                            \"opacity\": 1,\n                            \"visible_before\": true,\n                            \"visible_after\": true,\n                            \"auto_start\": true,\n                            \"auto_return\": false,\n                            \"allow_return\": false,\n                            \"type\": \"png\"\n                        }\n                    },\n                    {\n                        body: {\n                            width: \"500px\",\n                            bottom: \"100px\",\n                            left: \"-100px\"\n                        },\n                        pouch: {\n                            width: \"150px\",\n                            height: \"150px\",\n                            left: \"65px\",\n                            top: \"350px\"\n                        },\n                        pointer: {\n                            left: \"350px\",\n                            top: \"500px\"\n                        },\n                        pageThreeData: {\n                            \"code\": \"zoomable-image\",\n                            \"id\": 12,\n                            \"sequence\": -1,\n                            \"description\": \"kangaroo jumps off screen\",\n                            \"start\": {\n                                \"x\": 250,\n                                \"y\": 380,\n                                \"w\": 300,\n                                \"h\": 300\n                            },\n                            \"transition\": {\n                                \"x\": -1900,\n                                \"y\": -400,\n                                \"scale\": 1,\n                                \"duration\": 5\n                            },\n                            \"opacity\": 1,\n                            \"visible_before\": true,\n                            \"visible_after\": true,\n                            \"auto_start\": true,\n                            \"auto_return\": false,\n                            \"allow_return\": false,\n                            \"type\": \"png\"\n                        }\n                    },\n                    {\n                        body: {\n                            width: \"500px\",\n                            bottom: \"100px\",\n                            left: \"-100px\"\n                        },\n                        pouch: {\n                            width: \"100px\",\n                            height: \"100px\",\n                            left: \"140px\",\n                            top: \"400px\"\n                        },\n                        pointer: {\n                            left: \"550px\",\n                            top: \"450px\"\n                        },\n                        pageThreeData: {\n                            \"code\": \"zoomable-image\",\n                            \"id\": 13,\n                            \"sequence\": -1,\n                            \"description\": \"kangaroo jumps off screen\",\n                            \"start\": {\n                                \"x\": 450,\n                                \"y\": 300,\n                                \"w\": 250,\n                                \"h\": 250\n                            },\n                            \"transition\": {\n                                \"x\": -1000,\n                                \"y\": -1000,\n                                \"scale\": 1,\n                                \"duration\": 3\n                            },\n                            \"opacity\": 1,\n                            \"visible_before\": true,\n                            \"visible_after\": true,\n                            \"auto_start\": true,\n                            \"auto_return\": false,\n                            \"allow_return\": false,\n                            \"type\": \"png\"\n                        }\n                    }\n                ];\n                var correctToShuffle = [];\n                var incorrectToShuffle = [];\n                for (var i = 1; i < 25; i++) {\n                    var item = {\n                        image: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".jpg\",\n                        audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".mp3\",\n                        correct: true,\n                        style: {\n                            \"top\": 0,\n                            \"left\": 0,\n                            \"width\": 0,\n                            \"height\": 0\n                        },\n                        highlighted: false,\n                        draggable: true,\n                        transition: true,\n                        position: 0\n                    };\n                    correctToShuffle.push(item);\n                }\n                for (var i = 1; i < 7; i++) {\n                    var item = {\n                        image: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".jpg\",\n                        audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".mp3\",\n                        correct: false,\n                        style: {\n                            \"top\": 0,\n                            \"left\": 0,\n                            \"width\": 0,\n                            \"height\": 0\n                        },\n                        highlighted: false,\n                        draggable: true,\n                        transition: true,\n                        position: 0\n                    };\n                    incorrectToShuffle.push(item);\n                }\n                var correctShuffled = dataService.shuffleArray(correctToShuffle);\n                var incorrectShuffled = dataService.shuffleArray(incorrectToShuffle);\n                this.draggableObjects1 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n                this.draggableObjects2 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n                this.draggableObjects3 = dataService.shuffleArray(correctShuffled.concat(incorrectShuffled));\n                // this.itemSource = dataService.shuffleArray(correctToShuffle.concat(incorrectToShuffle));\n                this.dataService.setupAudioIntroduction(\"content/common/audio/consolidation/task5/introduction.mp3\");\n                this.dataService.playAudioIntroduction(2000);\n                this.$timeout(function () {\n                    // this.playMainIntro();\n                }, 11000);\n            }\n            Task3Controller.$inject = [\"$scope\", \"$timeout\", \"DataService\"];\n            return Task3Controller;\n        }());\n        Controllers.Task3Controller = Task3Controller;\n    })(Controllers = MorfologiApp.Controllers || (MorfologiApp.Controllers = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Controllers;\n    (function (Controllers) {\n        \"use strict\";\n        var Task2Controller = (function () {\n            function Task2Controller($scope, $timeout, dataService) {\n                this.$scope = $scope;\n                this.$timeout = $timeout;\n                this.dataService = dataService;\n                this.stage = \"stageOne\";\n                this.correctCounter = 0;\n                var correctToShuffle = [];\n                var incorrectToShuffle = [];\n                for (var i = 1; i < 25; i++) {\n                    var item = {\n                        image: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".jpg\",\n                        audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".mp3\",\n                        correct: true,\n                        highlighted: false\n                    };\n                    correctToShuffle.push(item);\n                }\n                for (var i = 1; i < 7; i++) {\n                    var item = {\n                        image: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".jpg\",\n                        audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".mp3\",\n                        correct: false,\n                        highlighted: false\n                    };\n                    incorrectToShuffle.push(item);\n                }\n                var stageTwoCorrect = correctToShuffle.splice(12, 12);\n                var stageTwoIncorrect = incorrectToShuffle.splice(3, 3);\n                this.stageOne = dataService.shuffleArray(correctToShuffle.concat(incorrectToShuffle));\n                this.stageTwo = dataService.shuffleArray(stageTwoCorrect.concat(stageTwoIncorrect));\n                // This should be run at the end of the constructor\n                /*\n                let handle = this;\n                dataService.setInteractionEndActivateTaskCallback(() => {\n                    this.activateTask(handle);\n                });\n                */\n                dataService.setupAudioIntroduction(\"content/\" + this.word + \"/task1/instruction-\" + this.dayWord + \".mp3\");\n                dataService.playAudioIntroduction(3000);\n            }\n            Task2Controller.$inject = [\"$scope\", \"$timeout\", \"DataService\"];\n            return Task2Controller;\n        }());\n        Controllers.Task2Controller = Task2Controller;\n    })(Controllers = MorfologiApp.Controllers || (MorfologiApp.Controllers = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Controllers;\n    (function (Controllers) {\n        \"use strict\";\n        var Task5Controller = (function () {\n            function Task5Controller($scope, $timeout, dataService) {\n                var _this = this;\n                this.$scope = $scope;\n                this.$timeout = $timeout;\n                this.dataService = dataService;\n                this.iHeight = 111;\n                this.iWidth = 148;\n                this.page = 1;\n                this.round = 0;\n                this.familyCharacter = \"\";\n                this.droppedObjects = [];\n                this.draggableObjects1 = [];\n                this.draggableObjects2 = [];\n                this.draggableObjects3 = [];\n                this.vanIsClosed = false;\n                this.opacity = 0;\n                this.pageOneImageData = {\n                    \"code\": \"zoomable-image\",\n                    \"id\": 11,\n                    \"sequence\": -1,\n                    \"description\": \"car drives on to screen\",\n                    \"start\": {\n                        \"x\": -900,\n                        \"y\": 100,\n                        \"w\": 800,\n                        \"h\": 600\n                    },\n                    \"transition\": {\n                        \"x\": 900,\n                        \"y\": 0,\n                        \"scale\": 1,\n                        \"duration\": 5\n                    },\n                    \"opacity\": 1,\n                    \"visible_before\": true,\n                    \"visible_after\": true,\n                    \"auto_start\": true,\n                    \"auto_return\": false,\n                    \"allow_return\": false,\n                    \"type\": \"png\"\n                };\n                this.pageThreeImageData = {\n                    \"code\": \"zoomable-image\",\n                    \"id\": 11,\n                    \"sequence\": -1,\n                    \"description\": \"car drives off screen\",\n                    \"start\": {\n                        \"x\": -900,\n                        \"y\": 100,\n                        \"w\": 800,\n                        \"h\": 600\n                    },\n                    \"transition\": {\n                        \"x\": 1900,\n                        \"y\": 0,\n                        \"scale\": 1,\n                        \"duration\": 6\n                    },\n                    \"opacity\": 1,\n                    \"visible_before\": true,\n                    \"visible_after\": true,\n                    \"auto_start\": true,\n                    \"auto_return\": false,\n                    \"allow_return\": false,\n                    \"type\": \"png\"\n                };\n                var correctToShuffle = [];\n                var incorrectToShuffle = [];\n                for (var i = 1; i < 25; i++) {\n                    var item = {\n                        image: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".jpg\",\n                        audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".mp3\",\n                        correct: true,\n                        style: {\n                            \"top\": 0,\n                            \"left\": 0,\n                            \"width\": 0,\n                            \"height\": 0\n                        },\n                        highlighted: false,\n                        draggable: true,\n                        transition: true,\n                        position: 0\n                    };\n                    correctToShuffle.push(item);\n                }\n                for (var i = 1; i < 7; i++) {\n                    var item = {\n                        image: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".jpg\",\n                        audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".mp3\",\n                        correct: false,\n                        style: {\n                            \"top\": 0,\n                            \"left\": 0,\n                            \"width\": 0,\n                            \"height\": 0\n                        },\n                        highlighted: false,\n                        draggable: true,\n                        transition: true,\n                        position: 0\n                    };\n                    incorrectToShuffle.push(item);\n                }\n                var correctShuffled = dataService.shuffleArray(correctToShuffle);\n                var incorrectShuffled = dataService.shuffleArray(incorrectToShuffle);\n                this.draggableObjects1 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n                this.draggableObjects2 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n                this.draggableObjects3 = dataService.shuffleArray(correctShuffled.concat(incorrectShuffled));\n                this.dataService.setInteractionEndActivateTaskCallback(function () {\n                    _this.dataService.clearInteractionEndActivateTaskCallback();\n                    _this.dataService.setupAudioIntroduction(\"content/common/audio/consolidation/task3/instruction.mp3\");\n                    _this.dataService.playAudioIntroduction(1000);\n                });\n                this.dataService.setupAudioIntroduction(\"content/common/audio/consolidation/task3/van-stopping.mp3\");\n                this.dataService.playAudioIntroduction(1000);\n            }\n            Task5Controller.$inject = [\"$scope\", \"$timeout\", \"DataService\"];\n            return Task5Controller;\n        }());\n        Controllers.Task5Controller = Task5Controller;\n    })(Controllers = MorfologiApp.Controllers || (MorfologiApp.Controllers = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Controllers;\n    (function (Controllers) {\n        \"use strict\";\n        var Task6Controller = (function () {\n            function Task6Controller($scope, $timeout, dataService) {\n                var _this = this;\n                this.$scope = $scope;\n                this.$timeout = $timeout;\n                this.dataService = dataService;\n                this.iHeight = 111;\n                this.iWidth = 148;\n                this.page = 1;\n                this.round = 0;\n                this.familyCharacter = \"\";\n                this.droppedObjects = [];\n                this.draggableObjects1 = [];\n                this.draggableObjects2 = [];\n                this.draggableObjects3 = [];\n                this.vanIsClosed = false;\n                this.opacity = 0;\n                this.pageOneImageData = {\n                    \"code\": \"zoomable-image\",\n                    \"id\": 11,\n                    \"sequence\": -1,\n                    \"description\": \"car drives on to screen\",\n                    \"start\": {\n                        \"x\": -900,\n                        \"y\": 100,\n                        \"w\": 800,\n                        \"h\": 600\n                    },\n                    \"transition\": {\n                        \"x\": 900,\n                        \"y\": 0,\n                        \"scale\": 1,\n                        \"duration\": 5\n                    },\n                    \"opacity\": 1,\n                    \"visible_before\": true,\n                    \"visible_after\": true,\n                    \"auto_start\": true,\n                    \"auto_return\": false,\n                    \"allow_return\": false,\n                    \"type\": \"png\"\n                };\n                this.pageThreeImageData = {\n                    \"code\": \"zoomable-image\",\n                    \"id\": 11,\n                    \"sequence\": -1,\n                    \"description\": \"car drives off screen\",\n                    \"start\": {\n                        \"x\": -900,\n                        \"y\": 100,\n                        \"w\": 800,\n                        \"h\": 600\n                    },\n                    \"transition\": {\n                        \"x\": 1900,\n                        \"y\": 0,\n                        \"scale\": 1,\n                        \"duration\": 6\n                    },\n                    \"opacity\": 1,\n                    \"visible_before\": true,\n                    \"visible_after\": true,\n                    \"auto_start\": true,\n                    \"auto_return\": false,\n                    \"allow_return\": false,\n                    \"type\": \"png\"\n                };\n                var correctToShuffle = [];\n                var incorrectToShuffle = [];\n                for (var i = 1; i < 25; i++) {\n                    var item = {\n                        image: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".jpg\",\n                        audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".mp3\",\n                        correct: true,\n                        style: {\n                            \"top\": 0,\n                            \"left\": 0,\n                            \"width\": 0,\n                            \"height\": 0\n                        },\n                        highlighted: false,\n                        draggable: true,\n                        transition: true,\n                        position: 0\n                    };\n                    correctToShuffle.push(item);\n                }\n                for (var i = 1; i < 7; i++) {\n                    var item = {\n                        image: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".jpg\",\n                        audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".mp3\",\n                        correct: false,\n                        style: {\n                            \"top\": 0,\n                            \"left\": 0,\n                            \"width\": 0,\n                            \"height\": 0\n                        },\n                        highlighted: false,\n                        draggable: true,\n                        transition: true,\n                        position: 0\n                    };\n                    incorrectToShuffle.push(item);\n                }\n                var correctShuffled = dataService.shuffleArray(correctToShuffle);\n                var incorrectShuffled = dataService.shuffleArray(incorrectToShuffle);\n                this.draggableObjects1 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n                this.draggableObjects2 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n                this.draggableObjects3 = dataService.shuffleArray(correctShuffled.concat(incorrectShuffled));\n                this.dataService.setInteractionEndActivateTaskCallback(function () {\n                    _this.dataService.clearInteractionEndActivateTaskCallback();\n                    _this.dataService.setupAudioIntroduction(\"content/common/audio/consolidation/task3/instruction.mp3\");\n                    _this.dataService.playAudioIntroduction(1000);\n                });\n                this.dataService.setupAudioIntroduction(\"content/common/audio/consolidation/task3/van-stopping.mp3\");\n                this.dataService.playAudioIntroduction(1000);\n            }\n            Task6Controller.$inject = [\"$scope\", \"$timeout\", \"DataService\"];\n            return Task6Controller;\n        }());\n        Controllers.Task6Controller = Task6Controller;\n    })(Controllers = MorfologiApp.Controllers || (MorfologiApp.Controllers = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../_references\"/>\n/// <reference path=\"../../models/models\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Controllers;\n    (function (Controllers) {\n        \"use strict\";\n        var MainPanelController = (function () {\n            function MainPanelController($http, $location, $scope) {\n                this.$http = $http;\n                this.$location = $location;\n                this.$scope = $scope;\n                this.language = \"\";\n                this.initialise();\n            }\n            MainPanelController.prototype.initialise = function () {\n                // this.language = this.dataService.getLanguage();\n            };\n            MainPanelController.prototype.selectTask = function (taskType) {\n                this.taskTemplateUrl = \"js/tasks/task\" + taskType + \"/template.html\";\n            };\n            MainPanelController.$inject = [\"$http\", \"$location\", \"$scope\"];\n            return MainPanelController;\n        }());\n        Controllers.MainPanelController = MainPanelController;\n    })(Controllers = MorfologiApp.Controllers || (MorfologiApp.Controllers = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n\n/// <reference path=\"../../_references\"/>\n/// <reference path=\"../../models/models\"/>\nvar MorfologiApp;\n(function (MorfologiApp) {\n    var Controllers;\n    (function (Controllers) {\n        \"use strict\";\n        var TestPanelController = (function () {\n            function TestPanelController($http, $location, $scope) {\n                this.$http = $http;\n                this.$location = $location;\n                this.$scope = $scope;\n                this.language = \"\";\n                this.initialise();\n            }\n            TestPanelController.prototype.initialise = function () {\n                // this.language = this.dataService.getLanguage();\n            };\n            TestPanelController.$inject = [\"$http\", \"$location\", \"$scope\"];\n            return TestPanelController;\n        }());\n        Controllers.TestPanelController = TestPanelController;\n    })(Controllers = MorfologiApp.Controllers || (MorfologiApp.Controllers = {}));\n})(MorfologiApp || (MorfologiApp = {}));\n","/// <reference path=\"_references.ts\"/>\n\nnamespace MorfologiApp {\n    import ILocationService = angular.ILocationService;\n    import IWindowService = angular.IWindowService;\n    \"use strict\";\n\n    /**\n     * Application-wide overall run function\n     * @param $window  Used for configuring cordova plugins options.\n     * @param $location  Re-route if storage is reloaded\n     */\n    export function runApp($window: IWindowService, $location: ILocationService) {\n\n    }\n\n    runApp.$inject = [\"$window\", \"$location\", \"DataService\"];\n\n}\n","/// <reference path=\"../_references.ts\"/>\n\nnamespace MorfologiApp {\n    import Moment = moment.Moment;\n    import MomentDuration = moment.Duration;\n    \"use strict\";\n\n    interface DeSerializable<T> {\n        deSerialise(input: Object): T;\n    }\n\n    export class Morf {\n        key: string;\n        root: string;\n        morphed: string;\n        position: string;\n\n        constructor(key, root, morphed, position) {\n            this.key = key;\n            this.root = root;\n            this.morphed = morphed;\n            this.position = position;\n        }\n    }\n\n    // Represents one task in a set that is produced for a user session\n    export class Task {\n        morf: Morf;           // index of the Morf in Session 'morfs' array\n        template: number;\n        completed: boolean;\n        started: Date;\n        finished: Date;\n        duration: number;\n        attempts: number;\n        answeredCorrectly: boolean;\n\n        constructor() {\n            this.morf = null;\n            this.template = 0;\n            this.completed = false;\n            this.attempts = 0;\n            this.answeredCorrectly = false;\n        }\n\n        begin() {\n            this.started = new Date();\n        }\n\n        attempt() {\n            this.attempts++;\n        }\n\n        complete(correctlyAnswered: boolean) {\n            this.completed = true;\n            this.answeredCorrectly = correctlyAnswered;\n            this.finished = new Date();\n            let startedOn: Moment = moment(this.started);\n            let finishedOn: Moment = moment(this.finished);\n            this.duration = moment.duration(finishedOn.diff(startedOn)).asSeconds();\n        }\n\n    }\n\n    interface SessionData {\n        name: string;\n        shuffle: boolean;\n        unforgiving: boolean;\n    }\n\n    // This holds a construction of the tasks the user will go through in the current session\n    export class Session {\n        private tasks: Task[];\n        private inactivePeriods: number[];\n        private selectedTask: number;       // index\n        private started: Date;\n        private finished: Date;\n        private duration: number;\n\n        constructor(\n            public name: string,\n            public shuffle: boolean,\n            public unforgiving: boolean\n        ) {\n            this.tasks = [];\n            this.inactivePeriods = [];\n            this.selectedTask = 0;\n            this.started = null;\n            this.finished = null;\n            this.duration = 0;\n        }\n\n        selectTask(index) {\n            if (index > -1 && index < this.tasks.length) {\n                this.selectedTask = index;\n            }\n        }\n\n        begin() {\n            this.started = new Date();\n        }\n\n        complete() {\n            this.finished = new Date();\n            let startedOn: Moment = moment(this.started);\n            let finishedOn: Moment = moment(this.finished);\n            this.duration = moment.duration(finishedOn.diff(startedOn)).asSeconds();\n        }\n\n        // Record inactive period if above a specified duration\n        inactive(duration: number) {\n            if (duration > 30) {\n                this.inactivePeriods.push(duration);\n            }\n        }\n\n        completeSelectedTask(correctlyAnswered: boolean) {\n            this.tasks[this.selectedTask].complete(correctlyAnswered);\n        }\n\n        static fromData(data: SessionData) {\n            return new this(data.name, data.shuffle, data.unforgiving);\n        }\n    }\n\n    export class Avatar {\n    }\n\n    export class User {\n        private userID: string;\n        private avatar: Avatar;\n        private seenMorfs: Morf[];\n\n        constructor(public username: string, public sessionId: string) {\n            this.userID = \"\";\n            this.avatar = null;\n            this.seenMorfs = [];\n        }\n\n\n    }\n\n\n\n\n}","/// <reference path=\"../_references.ts\"/>\n/// <reference path=\"../app.constants.ts\"/>\n/// <reference path=\"../models/models.ts\"/>\n\nnamespace MorfologiApp.Services {\n    \"use strict\";\n\n    export interface INettskjemaService {\n        setNettskjemaToken(token: string): void;\n        postTrackingDataItem(item: Object, sFunc: (videoData) => void, eFunc: (error) => void): void;\n    }\n\n    export class NettskjemaService implements INettskjemaService {\n        static $inject = [\"$http\", \"CordovaService\"];\n\n        private token: string;\n        private UUID: string;\n\n        constructor(private $http: ng.IHttpService) {\n            this.token = \"\";\n            this.UUID = \"\";\n        }\n\n        setNettskjemaToken(token) {\n            this.token = token;\n        }\n\n\n        postTrackingDataItem(item: Object, sFunc, eFunc) {\n            let postItem = (item, audio_file) => {\n                let form_data = item.asFormDataWithAttachment(audio_file, this.UUID);\n\n                this.$http.post(\"https://nettskjema.uio.no/answer/deliver.json?formId=74195\", form_data, {\n                    transformRequest: angular.identity,\n                    headers: {\n                        \"Content-Type\": undefined,\n                        \"NETTSKJEMA_CSRF_PREVENTION\": this.token\n                    }\n                }).then( (success) => {\n                    let data = success.data as string;\n                    if (success.status !== 200 || data.indexOf(\"success\") === -1 || data.indexOf(\"failure\") > -1) {\n                        eFunc(data);\n                    } else {\n                        item.markAsSynced();\n                        sFunc(data);\n                    }\n                }, () => {\n                    eFunc(\"Error sending usage data to server - no status response\");\n                });\n            };\n\n            postItem(item, null);\n\n        }\n\n\n    }\n\n}\n","/// <reference path=\"../_references\"/>\n/// <reference path=\"../app.constants.ts\"/>\n/// <reference path=\"../models/models\"/>\n/// <reference path=\"./nettskjemaService\"/>\n\nnamespace MorfologiApp.Services {\n    import Moment = moment.Moment;\n    \"use strict\";\n\n    export interface IDataService {\n        /**\n         * get the current language\n         * @return string\n         */\n        getLanguage(): string;\n        /**\n         * set the current language\n         * @param type The language code\n         */\n        setLanguage(type: string): void;\n        /**\n         * Given an array, return a new array containing shuffled values\n         * @param array\n         */\n        shuffleArray(array: Array<any>): Array<any>;\n\n        /* Window resize */\n        getResizableDivSize(): {};\n        setResizableDivSize(anything): void;\n\n        /*  Callback setup that disables interaction with an invisible overlay\n            intended for use during task introduction audio */\n        setDisableInteractionCallback(callback: (setMe: boolean, showSpeaker: boolean) => void): void;\n        setInteractionEndActivateTaskCallback(callback: (setMe: boolean) => void): void;\n        setInteractionStartActivateTaskCallback(callback: (setMe: boolean) => void): void;\n        clearInteractionEndActivateTaskCallback(): void;\n        externalCallDisableInteractionCallback(setMe: boolean, showSpeaker: boolean): void;\n\n        /* Tracking */\n        automaticallySendData(): void;\n\n        playAudioIntroduction(delay: number): void;\n        setupAudioIntroduction(url: string): void;\n    }\n\n    export class DataService implements IDataService {\n        static $inject = [\"$http\", \"$window\", \"$timeout\", \"NettskjemaService\", \"MorfologiConstants\"];\n\n        private currentLanguage: string = \"en\";\n        private user: User;\n        private morfer: {};\n        private session: Session;\n\n        private status: {\n            online: boolean;\n            posting_data: boolean;\n            unsynced_data: boolean;\n        };\n\n        private setupComplete: boolean = false;\n\n        private resizableDivSize: {};\n        private disableInteractionCallback: (setMe: boolean, showSpeaker: boolean) => void;   // callback function\n        private activateTaskStartCallback: () => void;   // callback function\n        private activateTaskEndCallback: () => void;   // callback function\n        private introductionAudio;\n\n\n        constructor(private $http: ng.IHttpService, private $window: ng.IWindowService, private $timeout: ng.ITimeoutService,\n                    private nettsckjemaService: INettskjemaService, private constants: IMorfologiConstants) {\n\n            this.morfer = {};\n            this.status = {\n                online : navigator.onLine || false,\n                posting_data: false,\n                unsynced_data: false\n            };\n\n            this.$window.addEventListener(\"offline\", () => {\n                this.status.online = false;\n            }, false);\n\n            this.$window.addEventListener(\"online\", () => {\n                if (!this.status.online) {\n                    this.status.online = true;\n                    this.automaticallySendData();\n                }\n            }, false);\n\n            this.activateTaskStartCallback = null;\n            this.activateTaskEndCallback = null;\n\n        }\n\n        getStatus(): {} {\n            return this.status;\n        }\n\n        automaticallySendData() {\n            this.attemptToPostUsageData();\n        }\n\n        // Make an attempt to post any new usage data to Nettskjema\n        attemptToPostUsageData(): void {\n            // If we receive a token, and are running on tablet, it is safe to assume we can then post to Nettskjema\n            this.$http.get(\"http://nettskjema.uio.no/ping.html\")\n                .then((success) => {\n                    console.log(\"Connected to Nettskjema\");\n                    this.nettsckjemaService.setNettskjemaToken(success.data.toString());\n                    if (this.status.unsynced_data && !this.status.posting_data) {\n                        this.postUsageData();\n                    }\n                }, () => {\n                    this.status.online = false;\n                    console.log(\"Unable to connect to Nettskjema\");\n                });\n        }\n\n        setupAfterLogin() {\n            if (!this.setupComplete) {\n                // Load session and morf files\n                this.$http.get(this.constants.constants[\"MORF_FILE\"])\n                    .then((morfData) => {\n                        console.log(\"Loaded morf file\");\n                        this.morfer = morfData;\n                        this.$http.get(this.constants.constants[\"SESSION_FILE\"])\n                            .then((sessionData) => {\n                                console.log(\"Loaded session file\");\n                                if (sessionData.hasOwnProperty(this.user.sessionId)) {\n                                    this.session = Session.fromData(sessionData[this.user.sessionId]);\n                                    this.createTasks();\n                                }\n                                this.setupComplete = true;\n                            }, () => {\n                                console.log(\"Unable to load morf file\");\n                            });\n                    }, () => {\n                        console.log(\"Unable to load sessions file\");\n                    });\n            }\n        }\n\n        login(username: string) {\n            this.$http.get(this.constants.constants[\"USER_FILE\"])\n                .then((users) => {\n                    console.log(\"Loaded user file\");\n                    if (users.hasOwnProperty(username)) {\n                        this.user = new User(username, users[username][\"sessionId\"]);\n                        this.setupAfterLogin();\n                    }\n                }, () => {\n                    console.log(\"Unable to load user file\");\n                });\n        }\n\n        createTasks() {\n\n        }\n\n        getResizableDivSize() {\n            return this.resizableDivSize;\n        }\n        setResizableDivSize(newSize: any): void {\n            this.resizableDivSize = newSize;\n        }\n\n        getLanguage() {\n            return this.currentLanguage;\n        };\n\n        setLanguage(type) {\n            this.currentLanguage = type;\n        };\n\n        postUsageData(): void {\n            this.status.posting_data = true;\n            let postData = [];\n\n            let postRemainingData = () => {\n                if (postData.length > 0) {\n                    this.nettsckjemaService.postTrackingDataItem(postData.pop(), (data) => {\n                        console.log(\"Successful Nettskjema submission: \" + data);\n                        postRemainingData();\n                    }, (data) => {\n                        console.log(\"Error during Nettskjema submission: \" + data);\n                    });\n                } else {\n                    this.status.posting_data = false;\n                    this.status.unsynced_data = false;\n                }\n            };\n            postRemainingData();\n        }\n\n        setupAudioIntroduction(url: string): void {\n            if (typeof this.introductionAudio !== \"undefined\") {\n                this.introductionAudio.pause();\n            }\n            this.$timeout(() => {\n                this.introductionAudio = new Audio(url);\n                this.introductionAudio.load();\n                this.introductionAudio.addEventListener(\"ended\", () => {\n                    this.disableInteractionCallback(false, true);\n                    if (this.activateTaskEndCallback !== null) {\n                        this.activateTaskEndCallback();\n                    }\n                });\n            }, 0);\n        }\n\n        playAudioIntroduction(delay: number): void {\n            if (delay > 0) {\n                this.disableInteractionCallback(true, true);\n            }\n            this.$timeout(() => {\n                if (this.activateTaskStartCallback !== null) {\n                    this.activateTaskStartCallback();\n                }\n                try {\n                    this.introductionAudio.play();\n                } catch (error) {     // In case no source is found, enable interaction\n                    console.log(\"No introduction audio source found\");\n                    this.disableInteractionCallback(false, true);\n                    if (this.activateTaskEndCallback !== null) {\n                        this.activateTaskEndCallback();\n                    }\n                }\n            }, delay);\n        }\n\n        setDisableInteractionCallback(callback): void {\n            this.disableInteractionCallback = callback;\n        }\n        setInteractionEndActivateTaskCallback(callback): void {\n            this.activateTaskEndCallback = callback;\n        }\n        clearInteractionEndActivateTaskCallback(): void {\n            this.activateTaskEndCallback = null;\n        }\n        setInteractionStartActivateTaskCallback(callback): void {\n            this.activateTaskStartCallback = callback;\n        }\n        externalCallDisableInteractionCallback(setMe: boolean, showSpeaker: boolean): void {\n            if (this.disableInteractionCallback !== null) {\n                this.disableInteractionCallback(setMe, showSpeaker);\n            }\n        }\n\n        // Return a new array that is a shuffle of the provided array\n        shuffleArray(array: Array<any>) {\n            let newArray = angular.copy(array);\n            let currentIndex = newArray.length, temporaryValue, randomIndex;\n\n            // While there remain elements to shuffle...\n            while (0 !== currentIndex) {\n\n                // Pick a remaining element...\n                randomIndex = Math.floor(Math.random() * currentIndex);\n                currentIndex -= 1;\n\n                // And swap it with the current element.\n                temporaryValue = newArray[currentIndex];\n                newArray[currentIndex] = newArray[randomIndex];\n                newArray[randomIndex] = temporaryValue;\n            }\n\n            return newArray;\n        }\n\n    }\n\n}\n","/// <reference path=\"../../_references.ts\"/>\n/// <reference path=\"../../services/dataService\"/>\n\nnamespace MorfologiApp.Directives {\n    import DataService = MorfologiApp.Services.DataService;\n    import IWindowService = angular.IWindowService;\n    \"use strict\";\n\n    // Custom scope interface must include any vars defined on the scope\n    export interface IISPFeatureDirectiveScope extends ng.IScope {\n        getWindowDimensions(): {};\n    }\n\n    class ResizeController {\n        static $inject: string[] = [\"DataService\", \"$window\"];\n        constructor(public dataService: DataService, public $window: IWindowService) {\n        };\n    }\n\n    function linker(scope: IISPFeatureDirectiveScope, element: ng.IAugmentedJQuery, ctrl: ResizeController) {\n        let w = angular.element(ctrl.$window);\n        scope.getWindowDimensions = function () {\n            return {\n                \"VIEW_HEIGHT\": element.prop(\"offsetHeight\"),\n                \"VIEW_WIDTH\": element.prop(\"offsetWidth\")\n            };\n        };\n        scope.$watch(scope.getWindowDimensions, function (newValue) {\n            ctrl.dataService.setResizableDivSize(newValue);\n        }, true);\n\n        w.bind(\"resize\", function () {\n            scope.$apply();\n        });\n\n        ctrl.dataService.setResizableDivSize(scope.getWindowDimensions());\n    }\n\n    export function ispResize(): ng.IDirective {\n        return {\n            restrict: \"A\",\n            controller: ResizeController,\n            link: linker\n        };\n    }\n}\n","/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\n\nnamespace MorfologiApp.Controllers {\n    \"use strict\";\n    import IScope = angular.IScope;\n    import ITimeoutService = angular.ITimeoutService;\n    import IDataService = MorfologiApp.Services.DataService;\n\n    export class Task1Controller {\n        static $inject = [\"$scope\", \"$timeout\", \"DataService\"];\n\n        private itemA;\n        private itemB;\n        private opacity: number;\n\n        constructor(private $scope: IScope, private $timeout: ITimeoutService, private dataService: IDataService) {\n            this.opacity = 0;\n            // this.setupItems();\n\n            $timeout(() => {\n                this.opacity = 1;\n            }, 1000);\n\n        }\n/*\n        setupItems() {\n            let firstItem = Math.random() > 0.5 ? \"itemA\" : \"itemB\";\n            let secondItem = firstItem === \"itemA\" ? \"itemB\" : \"itemA\";\n            let firstImage = Math.random() > 0.5 ? \"correct.jpg\" : \"incorrect.jpg\";\n            let secondImage = firstImage === \"correct.jpg\" ? \"incorrect.jpg\" : \"correct.jpg\";\n\n            this[firstItem] = {\n                file: \"content/\" + this.word + \"/articulation/day2/\" + firstImage,\n                correct: firstCorrect,\n                highlight: false\n            };\n            this[secondItem] = {\n                file: \"content/\" + this.word + \"/articulation/day2/\" + secondImage,\n                correct: secondCorrect,\n                highlight: false\n            };\n        }\n\n        activateTask(handle) {\n            this.dataService.externalCallDisableInteractionCallback(true, false);\n            this.playingSequence = true;\n            this.opacity = 1;\n            handle.$timeout(() => {\n                let audio = new Audio(handle.itemA[\"audio\"]);\n                audio.play();\n                handle.itemA[\"highlight\"] = true;\n                handle.$timeout(() => {\n                    handle.itemA[\"highlight\"] = false;\n                }, 1000);\n                handle.$timeout(() => {\n                    let audio = new Audio(handle.itemB[\"audio\"]);\n                    audio.play();\n                    handle.itemB[\"highlight\"] = true;\n                    handle.$timeout(() => {\n                        handle.itemB[\"highlight\"] = false;\n                        this.playingSequence = false;\n                        this.dataService.externalCallDisableInteractionCallback(false, false);\n                    }, 1000);\n                }, 2000);\n            }, 1500);\n        }\n\n        clickEarA() {\n            let audio = new Audio(this.itemA[\"audio\"]);\n            audio.play();\n        }\n\n        clickEarB() {\n            let audio = new Audio(this.itemB[\"audio\"]);\n            audio.play();\n        }\n\n        clickItemA() {\n            this.itemA.highlight = true;\n            this.itemB.highlight = false;\n            if (this.itemA[\"correct\"]) {\n                if (this.round === this.repeats) {\n                    this.$scope[\"wpC\"].taskFinished();\n                } else {\n                    this.$scope[\"wpC\"].setAndShowOnetimeInternalForwardArrowCallback( () => {\n                        this.clickForwardArrow();\n                    });\n                }\n            } else {\n                let rand = Math.floor(Math.random() * 4);\n                let audio = new Audio(\"content/common/audio/tryagain\" + rand + \".mp3\");\n                audio.play();\n                this.$timeout(() => {\n                    this.itemA.highlight = false;\n                }, 2000);\n            }\n        }\n\n        clickItemB() {\n            this.itemB.highlight = true;\n            this.itemA.highlight = false;\n            if (this.itemB[\"correct\"]) {\n                if (this.round === this.repeats) {\n                    this.$scope[\"wpC\"].taskFinished();\n                } else {\n                    this.$scope[\"wpC\"].setAndShowOnetimeInternalForwardArrowCallback( () => {\n                        this.clickForwardArrow();\n                    });\n                }\n            } else {\n                let rand = Math.floor(Math.random() * 4);\n                let audio = new Audio(\"content/common/audio/tryagain\" + rand + \".mp3\");\n                audio.play();\n                this.$timeout(() => {\n                    this.itemB.highlight = false;\n                }, 2000);\n            }\n        }\n\n        clickForwardArrow() {\n            this.opacity = 0;\n            this.round++;\n            this.itemA.highlight = false;\n            this.itemB.highlight = false;\n            this.showForwardArrow = false;\n            this.$timeout(() => {\n                this.randomiseItems();\n                this.activateTask(this);\n            }, 1000);\n        }\n\n    */\n\n    }\n}\n","/// <reference path=\"_references\"/>\n/// <reference path=\"./app.config.ts\"/>\n/// <reference path=\"./app.constants.ts\"/>\n/// <reference path=\"./app.run.ts\"/>\n/// <reference path=\"components/resizewindow/resize\"/>\n/// <reference path=\"tasks/task1/controller\"/>\n\n/**\n * Morfologi core application module.\n * @preferred\n */\nnamespace MorfologiApp {\n    \"use strict\";\n\n    /**\n     * Array of dependencies to be injected in the application \"dependencies\".\n     */\n    let dependencies = [\n        \"ui.router\",\n        \"pascalprecht.translate\",\n        \"ngDraggable\",\n        \"angular-flippy\"\n    ];\n\n    angular.module(\"MorfologiApp\", dependencies)\n        .constant(\"MorfologiConstants\", MorfologiConstants)\n        .service(MorfologiApp.Services)\n        .directive(MorfologiApp.Directives)\n        .controller(MorfologiApp.Controllers)\n        .config(configApp)\n        .run(runApp);\n}","/// <reference path=\"../_references.ts\"/>\n/// <reference path=\"../models/models\"/>\n\nnamespace MorfologiApp.Services {\n\n    import ITimeoutService = angular.ITimeoutService;\n    \"use strict\";\n    export interface IServerService {\n\n    }\n\n    export class ServerService implements IServerService {\n        static $inject = [\"$window\", \"$timeout\"];\n\n\n        constructor(private $window: ng.IWindowService,\n                    private $timeout: ITimeoutService) {\n\n        }\n\n\n    }\n\n}\n","/// <reference path=\"../../_references.ts\"/>\n/// <reference path=\"../../services/dataService\"/>\n\n/**\n * On click, plays a video\n * On end, activates the next task\n *\n * Use this directive in the form:\n * <div isp-video-player></div>\n */\nnamespace MorfologiApp.Directives {\n    import ISCEService = angular.ISCEService;\n    \"use strict\";\n\n    // isolated scope interface\n    export interface IISPVideoPlayerDirectiveScope extends ng.IScope {\n        ispVideoUrl: string;\n        ispPosterUrl: string;\n        ispActive: {};\n        ispType: string;\n        ispOnPlay(): void;\n        ispOnCompleted(): void;\n    }\n\n    class VideoPlayerController {\n        static $inject: string[] = [\"$scope\", \"$sce\"];\n\n        private posterUrl: string = \"\";\n        private videoUrl: string = \"\";\n        public video: HTMLVideoElement;\n        public playing: boolean;\n        public playImage: string;\n\n        constructor(private isolatedScope: IISPVideoPlayerDirectiveScope, private $sce: ISCEService) {\n            this.playing = false;\n            this.playImage = \"1\";\n            this.videoUrl = this.$sce.getTrustedResourceUrl(this.isolatedScope.ispVideoUrl);\n            this.posterUrl = this.isolatedScope.ispPosterUrl;\n            if (typeof this.isolatedScope.ispType !== \"undefined\" && this.isolatedScope.ispType != null) {\n                if (this.isolatedScope.ispType === \"task8\") {\n                    this.playImage = \"2\";\n                } else if (this.isolatedScope.ispType === \"none\") {\n                    this.playImage = \"\";\n                } else {\n                    this.playImage = \"1\";\n                }\n            }\n\n            isolatedScope.$watch(() => { return isolatedScope.ispActive[\"playing\"]; }, (newValue) => {\n                if (newValue === true) {\n                   if (isolatedScope.ispActive[\"playing\"] === true ) {\n                       this.playVideo();\n                   }\n                }\n            });\n        };\n\n        playVideo() {\n            if (this.isolatedScope.ispActive[\"active\"]) {\n                this.playing = true;\n                this.video.load();\n                this.video.play();\n                this.isolatedScope.ispOnPlay();\n            }\n        }\n\n    }\n\n    function linker(isolatedScope: IISPVideoPlayerDirectiveScope , element: ng.IAugmentedJQuery,\n                    attributes: ng.IAttributes, ctrl: VideoPlayerController) {\n\n        let c = element.children();\n        ctrl.video = <HTMLVideoElement> c[0];\n        ctrl.video.autoplay = false;\n\n        ctrl.video.addEventListener(\"ended\", () => {\n            ctrl.playing = false;\n            isolatedScope.ispActive[\"playing\"] = false;\n            isolatedScope.ispOnCompleted();\n            isolatedScope.$digest();\n        });\n    }\n\n    // directive declaration\n    export function ispVideoPlayer(): ng.IDirective {\n        return {\n            restrict: \"A\",\n            controller: VideoPlayerController,\n            controllerAs: \"vpC\",\n            replace: true,\n            templateUrl: \"js/components/videoplayer/videoplayer.html\",\n            scope: {\n                ispVideoUrl: \"@\",\n                ispPosterUrl: \"@\",\n                ispOnCompleted: \"&\",\n                ispActive: \"=\",\n                ispOnPlay: \"&\",\n                ispType: \"@\"\n            },\n            link: linker\n        };\n    }\n\n    // Html5 video fix\n    export function html5videofix(): ng.IDirective {\n        return {\n            restrict: \"A\",\n            link: function(isolatedScope: IISPVideoPlayerDirectiveScope, element, attr) {\n                attr.$set(\"src\", attr[\"vsrc\"]);\n                attr.$set(\"poster\", attr[\"psrc\"]);\n                attr.$set(\"autoplay\", false);\n                attr.$set(\"webkit-playsinline\", \"\");\n                attr.$set(\"playsinline\", \"\");\n            }\n        };\n    }\n}\n","/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\n\nnamespace MorfologiApp.Controllers {\n    \"use strict\";\n    import IScope = angular.IScope;\n    import ITimeoutService = angular.ITimeoutService;\n    import IDataService = MorfologiApp.Services.DataService;\n\n    export class Task3Controller {\n        static $inject = [\"$scope\", \"$timeout\", \"DataService\"];\n\n        private word: string;\n        private dayWord: string;\n        private dayIndex: number;\n        private page: number;\n        private round: number;\n        private bounce: boolean;\n        private pointerStyle: {};\n        private familyCharacter: string;\n        private kangarooData: {};\n        private draggableObjects1: {}[];\n        private draggableObjects2: {}[];\n        private draggableObjects3: {}[];\n        private droppedObjects: {}[];\n\n        private iHeight: number = 111;\n        private iWidth: number = 148;\n\n        private vanIsClosed: boolean;\n        private activatePointer: boolean;\n\n        constructor(private $scope: IScope, private $timeout: ITimeoutService, private dataService: IDataService) {\n\n            this.page = 1;\n            this.round = 0;\n            this.bounce = false;\n            this.familyCharacter = \"\";\n            this.droppedObjects = [];\n            this.draggableObjects1 = [];\n            this.draggableObjects2 = [];\n            this.draggableObjects3 = [];\n            this.vanIsClosed = false;\n            this.activatePointer = false;\n\n            this.kangarooData = [\n                {\n                    body: {\n                        width: \"500px\",\n                        bottom: \"100px\",\n                        left: \"-80px\"\n                    },\n                    pouch: {\n                        width: \"150px\",\n                        height: \"150px\",\n                        left: \"70px\",\n                        top: \"300px\"\n                    },\n                    pointer: {\n                        left: \"100px\",\n                        top: \"400px\"\n                    },\n                    pageThreeData: {\n                        \"code\": \"zoomable-image\",\n                        \"id\": 11,\n                        \"sequence\": -1,\n                        \"description\": \"kangaroo jumps off screen\",\n                        \"start\": {\n                            \"x\": -50,\n                            \"y\": 250,\n                            \"w\": 400,\n                            \"h\": 400\n                        },\n                        \"transition\": {\n                            \"x\": 1900,\n                            \"y\": 800,\n                            \"scale\": 1,\n                            \"duration\": 4\n                        },\n                        \"opacity\": 1,\n                        \"visible_before\": true,\n                        \"visible_after\": true,\n                        \"auto_start\": true,\n                        \"auto_return\": false,\n                        \"allow_return\": false,\n                        \"type\": \"png\"\n                    }\n                },\n                {\n                    body: {\n                        width: \"500px\",\n                        bottom: \"100px\",\n                        left: \"-100px\"\n                    },\n                    pouch: {\n                        width: \"150px\",\n                        height: \"150px\",\n                        left: \"65px\",\n                        top: \"350px\"\n                    },\n                    pointer: {\n                        left: \"350px\",\n                        top: \"500px\"\n                    },\n                    pageThreeData: {\n                        \"code\": \"zoomable-image\",\n                        \"id\": 12,\n                        \"sequence\": -1,\n                        \"description\": \"kangaroo jumps off screen\",\n                        \"start\": {\n                            \"x\": 250,\n                            \"y\": 380,\n                            \"w\": 300,\n                            \"h\": 300\n                        },\n                        \"transition\": {\n                            \"x\": -1900,\n                            \"y\": -400,\n                            \"scale\": 1,\n                            \"duration\": 5\n                        },\n                        \"opacity\": 1,\n                        \"visible_before\": true,\n                        \"visible_after\": true,\n                        \"auto_start\": true,\n                        \"auto_return\": false,\n                        \"allow_return\": false,\n                        \"type\": \"png\"\n                    }\n                },\n                {\n                    body: {\n                        width: \"500px\",\n                        bottom: \"100px\",\n                        left: \"-100px\"\n                    },\n                    pouch: {\n                        width: \"100px\",\n                        height: \"100px\",\n                        left: \"140px\",\n                        top: \"400px\"\n                    },\n                    pointer: {\n                        left: \"550px\",\n                        top: \"450px\"\n                    },\n                    pageThreeData: {\n                        \"code\": \"zoomable-image\",\n                        \"id\": 13,\n                        \"sequence\": -1,\n                        \"description\": \"kangaroo jumps off screen\",\n                        \"start\": {\n                            \"x\": 450,\n                            \"y\": 300,\n                            \"w\": 250,\n                            \"h\": 250\n                        },\n                        \"transition\": {\n                            \"x\": -1000,\n                            \"y\": -1000,\n                            \"scale\": 1,\n                            \"duration\": 3\n                        },\n                        \"opacity\": 1,\n                        \"visible_before\": true,\n                        \"visible_after\": true,\n                        \"auto_start\": true,\n                        \"auto_return\": false,\n                        \"allow_return\": false,\n                        \"type\": \"png\"\n                    }\n                }\n            ];\n\n\n            let correctToShuffle = [];\n            let incorrectToShuffle = [];\n\n            for (let i = 1; i < 25; i++) {\n                let item = {\n                    image: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".jpg\",\n                    audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".mp3\",\n                    correct: true,\n                    style: {\n                        \"top\": 0,\n                        \"left\": 0,\n                        \"width\": 0,\n                        \"height\": 0\n                    },\n                    highlighted: false,\n                    draggable: true,\n                    transition: true,\n                    position: 0\n                };\n                correctToShuffle.push(item);\n            }\n\n            for (let i = 1; i < 7; i++) {\n                let item = {\n                    image: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".jpg\",\n                    audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".mp3\",\n                    correct: false,\n                    style: {\n                        \"top\": 0,\n                        \"left\": 0,\n                        \"width\": 0,\n                        \"height\": 0\n                    },\n                    highlighted: false,\n                    draggable: true,\n                    transition: true,\n                    position: 0\n                };\n                incorrectToShuffle.push(item);\n            }\n\n            let correctShuffled = dataService.shuffleArray(correctToShuffle);\n            let incorrectShuffled = dataService.shuffleArray(incorrectToShuffle);\n\n            this.draggableObjects1 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n            this.draggableObjects2 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n            this.draggableObjects3 = dataService.shuffleArray(correctShuffled.concat(incorrectShuffled));\n\n            // this.itemSource = dataService.shuffleArray(correctToShuffle.concat(incorrectToShuffle));\n\n            this.dataService.setupAudioIntroduction(\"content/common/audio/consolidation/task5/introduction.mp3\");\n            this.dataService.playAudioIntroduction(2000);\n            this.$timeout(() => {\n                // this.playMainIntro();\n            }, 11000);\n        }\n\n        /*\n\n        playMainIntro() {\n            this.dataService.setupAudioIntroduction(\"content/common/audio/consolidation/task5/introround\" + (this.round + 1) + \".mp3\");\n            this.dataService.playAudioIntroduction(2000);\n            this.$timeout(() => {\n                this.activatePointer = true;\n            }, 3000);\n        }\n\n        clickKangaroo(index: number) {\n            this.activatePointer = false;\n            if (index === this.round + 1) {\n                this.bounce = true;\n                this.$timeout(() => {\n                    this.round = index;\n                    this.page = 2;\n                    this.bounce = false;\n                    this.introduction();\n                }, 2000);\n            }\n        }\n\n\n        introduction() {\n            this.setupImages();\n            this.dataService.setupAudioIntroduction(\"content/\" + this.word + \"/task5/\" + this.dayWord + \".mp3\");\n            this.dataService.playAudioIntroduction(2000);\n            this.$timeout(() => {\n                this.enlargeImages();\n            }, 1500);\n        }\n\n        setupImages() {\n            let vGap = 30, hGap = 30;\n\n            for (let n = 1; n < 4 ; n++) {\n                let list = this[\"draggableObjects\" + n];\n\n                    for (let position = 0; position < list.length; position++) {\n\n                        // Prepare the images for popping up from their center points\n                        list[position][\"style\"] = {\n                            \"position\": \"absolute\",\n                            \"top\": (this.iHeight + vGap) * Math.floor(position / 2) + Math.floor(this.iHeight / 2) + \"px\",\n                            \"left\": (this.iWidth + hGap) * (position % 2) + Math.floor(this.iWidth / 2) + \"px\",\n                            \"width\": \"0\",\n                            \"height\": \"0\"\n                        };\n                }\n            }\n        }\n\n        enlargeImages() {     // After a timeout to allow digest of the previous style, set the style to \"enlarge\" the images\n            let vGap = 30, hGap = 30;\n            let items = this[\"draggableObjects\" + this.round];\n            for (let position = 0; position < items.length; position++) {\n                items[position][\"style\"] = {\n                    \"position\": \"absolute\",\n                    \"top\": (this.iHeight + vGap) * Math.floor(position / 2) + \"px\",\n                    \"left\": (this.iWidth + hGap) * (position % 2) + \"px\",\n                    \"width\": this.iWidth + \"px\",\n                    \"height\": this.iHeight + \"px\"\n                };\n            }\n            this.$timeout(() => {\n                for (let position = 0; position < items.length; position++) {\n                    items[position][\"transition\"] = false;      // Transition effects dragging, so turn it off now\n                }\n            }, 1000);\n        }\n\n        jumpOffPageThreeCompleted() {\n            this.$scope[\"wpC\"].taskFinished();\n        }\n\n        static clickImage(filename) {\n            new Audio(filename).play();\n        }\n\n        onDropComplete = function(item: {}) {\n            new Audio(item[\"audio\"]).play();\n            if (item[\"correct\"]) {\n                let iWidth = 80, iHeight = 60, leftOffset = 90, topOffset = 122, shiftFactor = 1.5;\n                this.droppedObjects.push(item);\n                let itemIndex = this[\"draggableObjects\" + this.round].indexOf(item);\n                this[\"draggableObjects\" + this.round].splice(itemIndex, 1);\n                let i = this.droppedObjects.length - 1;\n                item[\"style\"] = {\n                    \"position\" : \"absolute\",\n                    \"top\" : topOffset + i * shiftFactor + \"px\",\n                    \"left\" : leftOffset - i * shiftFactor + \"px\",\n                    \"width\" : iWidth + (2 * i * shiftFactor) + \"px\",\n                    \"height\" : iHeight + (2 * i * shiftFactor) + \"px\",\n                    \"transform\": \"none\"\n                };\n                if (this.droppedObjects.length === 24) {\n                    this.bounce = true;\n                    this.$timeout(() => {\n                        this.page = 3;\n                    }, 2000);\n                } else if (this.droppedObjects.length === 8 || this.droppedObjects.length === 16) {\n                    this.bounce = true;\n                    this.$timeout(() => {\n                        this.bounce = false;\n                        this.page = 1;\n                        this.playMainIntro();\n                    }, 2000);\n                }\n\n            }\n\n        };\n\n        */\n\n    }\n}\n","/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\n\nnamespace MorfologiApp.Controllers {\n    \"use strict\";\n    import IScope = angular.IScope;\n    import ITimeoutService = angular.ITimeoutService;\n    import IDataService = MorfologiApp.Services.DataService;\n\n    export class Task2Controller {\n        static $inject = [\"$scope\", \"$timeout\", \"DataService\"];\n\n        private word: string;\n        private dayWord: string;\n        private dayIndex: number;\n        private stage: string;\n        private correctCounter: number;\n        private stageOne: {}[];\n        private stageTwo: {}[];\n\n        constructor(private $scope: IScope, private $timeout: ITimeoutService, private dataService: IDataService) {\n\n            this.stage = \"stageOne\";\n            this.correctCounter = 0;\n\n            let correctToShuffle = [];\n            let incorrectToShuffle = [];\n\n            for (let i = 1; i < 25; i++) {\n                let item = {\n                    image: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".jpg\",\n                    audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".mp3\",\n                    correct: true,\n                    highlighted: false\n                };\n                correctToShuffle.push(item);\n            }\n\n            for (let i = 1; i < 7; i++) {\n                let item = {\n                    image: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".jpg\",\n                    audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".mp3\",\n                    correct: false,\n                    highlighted: false\n                };\n                incorrectToShuffle.push(item);\n            }\n\n            let stageTwoCorrect = correctToShuffle.splice(12, 12);\n            let stageTwoIncorrect = incorrectToShuffle.splice(3, 3);\n\n            this.stageOne = dataService.shuffleArray(correctToShuffle.concat(incorrectToShuffle));\n            this.stageTwo = dataService.shuffleArray(stageTwoCorrect.concat(stageTwoIncorrect));\n\n            // This should be run at the end of the constructor\n            /*\n            let handle = this;\n            dataService.setInteractionEndActivateTaskCallback(() => {\n                this.activateTask(handle);\n            });\n            */\n            dataService.setupAudioIntroduction(\"content/\" + this.word + \"/task1/instruction-\" + this.dayWord + \".mp3\");\n            dataService.playAudioIntroduction(3000);\n        }\n\n        /*\n\n        activateTask() {\n\n        }\n\n        clickItem(item) {\n            this.$timeout(() => {\n                new Audio(item[\"audio\"]).play();\n            }, 250);\n            if (item[\"highlighted\"]) {\n                return;\n            }\n            item[\"highlighted\"] = true;\n            if (!item.correct) {\n                this.$timeout(() => {\n                    item[\"highlighted\"] = false;\n                }, 2000);\n            } else {\n                this.correctCounter++;\n            }\n            if (this.correctCounter === 12) {\n                if (this.stage === \"stageOne\") {\n                    this.$scope[\"wpC\"].setAndShowOnetimeInternalForwardArrowCallback( () => {\n                        this.startStageTwo();\n                    });\n                } else {\n                    this.$scope[\"wpC\"].taskFinished();\n                }\n            }\n        }\n\n        startStageTwo() {\n            this.stage = \"stageTwo\";\n            this.correctCounter = 0;\n            new Audio(\"content/\" + this.word + \"/task1/instruction-\" + this.dayWord + \".mp3\").play();\n        }\n\n        */\n\n    }\n}\n","/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\n\nnamespace MorfologiApp.Controllers {\n    \"use strict\";\n    import IScope = angular.IScope;\n    import ITimeoutService = angular.ITimeoutService;\n    import IDataService = MorfologiApp.Services.DataService;\n\n    export class Task5Controller {\n        static $inject = [\"$scope\", \"$timeout\", \"DataService\"];\n\n        private word: string;\n        private dayWord: string;\n        private dayIndex: number;\n        private page: number;\n        private round: number;\n        private familyCharacter: string;\n        private pageOneImageData: {};\n        private pageThreeImageData: {};\n        private draggableObjects1: {}[];\n        private draggableObjects2: {}[];\n        private draggableObjects3: {}[];\n        private droppedObjects: {}[];\n\n        private iHeight: number = 111;\n        private iWidth: number = 148;\n\n        private vanIsClosed: boolean;\n        private opacity: number;\n\n        constructor(private $scope: IScope, private $timeout: ITimeoutService, private dataService: IDataService) {\n\n            this.page = 1;\n            this.round = 0;\n            this.familyCharacter = \"\";\n            this.droppedObjects = [];\n            this.draggableObjects1 = [];\n            this.draggableObjects2 = [];\n            this.draggableObjects3 = [];\n            this.vanIsClosed = false;\n            this.opacity = 0;\n\n            this.pageOneImageData = {\n                \"code\": \"zoomable-image\",\n                \"id\": 11,\n                \"sequence\": -1,\n                \"description\": \"car drives on to screen\",\n                \"start\": {\n                    \"x\": -900,\n                    \"y\": 100,\n                    \"w\": 800,\n                    \"h\": 600\n                },\n                \"transition\": {\n                    \"x\": 900,\n                    \"y\": 0,\n                    \"scale\": 1,\n                    \"duration\": 5\n                },\n                \"opacity\": 1,\n                \"visible_before\": true,\n                \"visible_after\": true,\n                \"auto_start\": true,\n                \"auto_return\": false,\n                \"allow_return\": false,\n                \"type\": \"png\"\n            };\n\n            this.pageThreeImageData = {\n                \"code\": \"zoomable-image\",\n                \"id\": 11,\n                \"sequence\": -1,\n                \"description\": \"car drives off screen\",\n                \"start\": {\n                    \"x\": -900,\n                    \"y\": 100,\n                    \"w\": 800,\n                    \"h\": 600\n                },\n                \"transition\": {\n                    \"x\": 1900,\n                    \"y\": 0,\n                    \"scale\": 1,\n                    \"duration\": 6\n                },\n                \"opacity\": 1,\n                \"visible_before\": true,\n                \"visible_after\": true,\n                \"auto_start\": true,\n                \"auto_return\": false,\n                \"allow_return\": false,\n                \"type\": \"png\"\n            };\n\n            let correctToShuffle = [];\n            let incorrectToShuffle = [];\n\n            for (let i = 1; i < 25; i++) {\n                let item = {\n                    image: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".jpg\",\n                    audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".mp3\",\n                    correct: true,\n                    style: {\n                        \"top\": 0,\n                        \"left\": 0,\n                        \"width\": 0,\n                        \"height\": 0\n                    },\n                    highlighted: false,\n                    draggable: true,\n                    transition: true,\n                    position: 0\n                };\n                correctToShuffle.push(item);\n            }\n\n            for (let i = 1; i < 7; i++) {\n                let item = {\n                    image: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".jpg\",\n                    audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".mp3\",\n                    correct: false,\n                    style: {\n                        \"top\": 0,\n                        \"left\": 0,\n                        \"width\": 0,\n                        \"height\": 0\n                    },\n                    highlighted: false,\n                    draggable: true,\n                    transition: true,\n                    position: 0\n                };\n                incorrectToShuffle.push(item);\n            }\n\n            let correctShuffled = dataService.shuffleArray(correctToShuffle);\n            let incorrectShuffled = dataService.shuffleArray(incorrectToShuffle);\n\n            this.draggableObjects1 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n            this.draggableObjects2 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n            this.draggableObjects3 = dataService.shuffleArray(correctShuffled.concat(incorrectShuffled));\n\n            this.dataService.setInteractionEndActivateTaskCallback(() => {\n                this.dataService.clearInteractionEndActivateTaskCallback();\n                this.dataService.setupAudioIntroduction(\"content/common/audio/consolidation/task3/instruction.mp3\");\n                this.dataService.playAudioIntroduction(1000);\n            });\n            this.dataService.setupAudioIntroduction(\"content/common/audio/consolidation/task3/van-stopping.mp3\");\n            this.dataService.playAudioIntroduction(1000);\n        }\n\n        /*\n\n        introduction() {\n            let audioFile = \"\";\n            this.round++;\n\n            this.setupImages();\n\n            this.$timeout(() => {\n                if (this.round === 1) {\n                    this.familyCharacter = \"mother.png\";\n                    audioFile = \"content/\" + this.word + \"/task3/\" + this.dayWord + \"/mother.mp3\";\n                } else if (this.round === 2) {\n                    this.familyCharacter = \"father.png\";\n                    audioFile = \"content/\" + this.word + \"/task3/\" + this.dayWord + \"/father.mp3\";\n                } else {\n                    this.familyCharacter = \"daughter.png\";\n                    audioFile = \"content/\" + this.word + \"/task3/\" + this.dayWord + \"/daughter.mp3\";\n                }\n                this.dataService.setupAudioIntroduction(audioFile);\n            }, 1000);\n\n            this.$timeout(() => {\n                this.opacity = 1;\n                this.dataService.playAudioIntroduction(0);\n            }, 2000);\n\n            this.$timeout(() => {\n                this.enlargeImages();\n            }, 4000);\n\n        }\n\n        setupImages() {\n            let vGap = 10, hGap = 10;\n\n            for (let n = 1; n < 4 ; n++) {\n                let list = this[\"draggableObjects\" + n];\n\n                    for (let position = 0; position < list.length; position++) {\n\n                        // Prepare the images for popping up from their center points\n                        list[position][\"style\"] = {\n                            \"position\": \"absolute\",\n                            \"top\": (this.iHeight + vGap) * Math.floor(position / 5) + Math.floor(this.iHeight / 2) + \"px\",\n                            \"left\": (this.iWidth + hGap) * (position % 5) + Math.floor(this.iWidth / 2) + \"px\",\n                            \"width\": \"0\",\n                            \"height\": \"0\"\n                        };\n                }\n            }\n        }\n\n        enlargeImages() {     // After a timeout to allow digest of the previous style, set the style to \"enlarge\" the images\n            let vGap = 10, hGap = 10;\n            let items = this[\"draggableObjects\" + this.round];\n            for (let position = 0; position < items.length; position++) {\n                items[position][\"style\"] = {\n                    \"position\": \"absolute\",\n                    \"top\": (this.iHeight + vGap) * Math.floor(position / 5) + \"px\",\n                    \"left\": (this.iWidth + hGap) * (position % 5) + \"px\",\n                    \"width\": this.iWidth + \"px\",\n                    \"height\": this.iHeight + \"px\"\n                };\n            }\n            this.$timeout(() => {\n                for (let position = 0; position < items.length; position++) {\n                    items[position][\"transition\"] = false;      // Transition effects dragging, so turn it off now\n                }\n            }, 1000);\n        }\n\n        driveOnPageOneCompleted() {\n            this.$scope[\"wpC\"].setAndShowOnetimeInternalForwardArrowCallback( () => {\n                this.page = 2;\n                this.introduction();\n            });\n        }\n\n        driveOffPageThreeCompleted() {\n            this.$scope[\"wpC\"].taskFinished();\n        }\n\n        static clickImage(filename) {\n            new Audio(filename).play();\n        }\n\n        closeVan() {\n            this.$timeout(() => {\n                this.vanIsClosed = true;\n                new Audio(\"content/common/audio/consolidation/task3/van-door.mp3\").play();\n                this.$timeout(() => {\n                    this.page = 3;\n                    new Audio(\"content/common/audio/consolidation/task3/van-driving.mp3\").play();\n                }, 500);\n            }, 1500);\n        }\n\n        onDropComplete = function(item: {}) {\n            new Audio(item[\"audio\"]).play();\n            if (item[\"correct\"]) {\n                let iWidth = 80, iHeight = 60, leftOffset = 90, topOffset = 122, shiftFactor = 1.5;\n                this.droppedObjects.push(item);\n                let itemIndex = this[\"draggableObjects\" + this.round].indexOf(item);\n                this[\"draggableObjects\" + this.round].splice(itemIndex, 1);\n                let i = this.droppedObjects.length - 1;\n                item[\"style\"] = {\n                    \"position\" : \"absolute\",\n                    \"top\" : topOffset + i * shiftFactor + \"px\",\n                    \"left\" : leftOffset - i * shiftFactor + \"px\",\n                    \"width\" : iWidth + (2 * i * shiftFactor) + \"px\",\n                    \"height\" : iHeight + (2 * i * shiftFactor) + \"px\",\n                    \"transform\": \"none\"\n                };\n                if (this.droppedObjects.length === 24) {\n                    this.opacity = 0;\n                    this.closeVan();\n                } else if (this.droppedObjects.length === 8 || this.droppedObjects.length === 16) {\n                    this.opacity = 0;\n                    this.introduction();\n                }\n            }\n\n        };\n\n        */\n\n    }\n}\n","/// <reference path=\"../../../js/_references\"/>\n/// <reference path=\"../../models/models\"/>\n/// <reference path=\"../../services/dataService\"/>\n\nnamespace MorfologiApp.Controllers {\n    \"use strict\";\n    import IScope = angular.IScope;\n    import ITimeoutService = angular.ITimeoutService;\n    import IDataService = MorfologiApp.Services.DataService;\n\n    export class Task6Controller {\n        static $inject = [\"$scope\", \"$timeout\", \"DataService\"];\n\n        private word: string;\n        private dayWord: string;\n        private dayIndex: number;\n        private page: number;\n        private round: number;\n        private familyCharacter: string;\n        private pageOneImageData: {};\n        private pageThreeImageData: {};\n        private draggableObjects1: {}[];\n        private draggableObjects2: {}[];\n        private draggableObjects3: {}[];\n        private droppedObjects: {}[];\n\n        private iHeight: number = 111;\n        private iWidth: number = 148;\n\n        private vanIsClosed: boolean;\n        private opacity: number;\n\n        constructor(private $scope: IScope, private $timeout: ITimeoutService, private dataService: IDataService) {\n\n            this.page = 1;\n            this.round = 0;\n            this.familyCharacter = \"\";\n            this.droppedObjects = [];\n            this.draggableObjects1 = [];\n            this.draggableObjects2 = [];\n            this.draggableObjects3 = [];\n            this.vanIsClosed = false;\n            this.opacity = 0;\n\n            this.pageOneImageData = {\n                \"code\": \"zoomable-image\",\n                \"id\": 11,\n                \"sequence\": -1,\n                \"description\": \"car drives on to screen\",\n                \"start\": {\n                    \"x\": -900,\n                    \"y\": 100,\n                    \"w\": 800,\n                    \"h\": 600\n                },\n                \"transition\": {\n                    \"x\": 900,\n                    \"y\": 0,\n                    \"scale\": 1,\n                    \"duration\": 5\n                },\n                \"opacity\": 1,\n                \"visible_before\": true,\n                \"visible_after\": true,\n                \"auto_start\": true,\n                \"auto_return\": false,\n                \"allow_return\": false,\n                \"type\": \"png\"\n            };\n\n            this.pageThreeImageData = {\n                \"code\": \"zoomable-image\",\n                \"id\": 11,\n                \"sequence\": -1,\n                \"description\": \"car drives off screen\",\n                \"start\": {\n                    \"x\": -900,\n                    \"y\": 100,\n                    \"w\": 800,\n                    \"h\": 600\n                },\n                \"transition\": {\n                    \"x\": 1900,\n                    \"y\": 0,\n                    \"scale\": 1,\n                    \"duration\": 6\n                },\n                \"opacity\": 1,\n                \"visible_before\": true,\n                \"visible_after\": true,\n                \"auto_start\": true,\n                \"auto_return\": false,\n                \"allow_return\": false,\n                \"type\": \"png\"\n            };\n\n            let correctToShuffle = [];\n            let incorrectToShuffle = [];\n\n            for (let i = 1; i < 25; i++) {\n                let item = {\n                    image: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".jpg\",\n                    audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/correct/\" + i + \".mp3\",\n                    correct: true,\n                    style: {\n                        \"top\": 0,\n                        \"left\": 0,\n                        \"width\": 0,\n                        \"height\": 0\n                    },\n                    highlighted: false,\n                    draggable: true,\n                    transition: true,\n                    position: 0\n                };\n                correctToShuffle.push(item);\n            }\n\n            for (let i = 1; i < 7; i++) {\n                let item = {\n                    image: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".jpg\",\n                    audio: \"content/\" + this.word + \"/\" + this.dayWord + \"/incorrect/\" + i + \".mp3\",\n                    correct: false,\n                    style: {\n                        \"top\": 0,\n                        \"left\": 0,\n                        \"width\": 0,\n                        \"height\": 0\n                    },\n                    highlighted: false,\n                    draggable: true,\n                    transition: true,\n                    position: 0\n                };\n                incorrectToShuffle.push(item);\n            }\n\n            let correctShuffled = dataService.shuffleArray(correctToShuffle);\n            let incorrectShuffled = dataService.shuffleArray(incorrectToShuffle);\n\n            this.draggableObjects1 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n            this.draggableObjects2 = dataService.shuffleArray(correctShuffled.splice(0, 8).concat(incorrectShuffled.splice(0, 2)));\n            this.draggableObjects3 = dataService.shuffleArray(correctShuffled.concat(incorrectShuffled));\n\n            this.dataService.setInteractionEndActivateTaskCallback(() => {\n                this.dataService.clearInteractionEndActivateTaskCallback();\n                this.dataService.setupAudioIntroduction(\"content/common/audio/consolidation/task3/instruction.mp3\");\n                this.dataService.playAudioIntroduction(1000);\n            });\n            this.dataService.setupAudioIntroduction(\"content/common/audio/consolidation/task3/van-stopping.mp3\");\n            this.dataService.playAudioIntroduction(1000);\n        }\n\n        /*\n\n\n        introduction() {\n            let audioFile = \"\";\n            this.round++;\n\n            this.setupImages();\n\n            this.$timeout(() => {\n                if (this.round === 1) {\n                    this.familyCharacter = \"mother.png\";\n                    audioFile = \"content/\" + this.word + \"/task3/\" + this.dayWord + \"/mother.mp3\";\n                } else if (this.round === 2) {\n                    this.familyCharacter = \"father.png\";\n                    audioFile = \"content/\" + this.word + \"/task3/\" + this.dayWord + \"/father.mp3\";\n                } else {\n                    this.familyCharacter = \"daughter.png\";\n                    audioFile = \"content/\" + this.word + \"/task3/\" + this.dayWord + \"/daughter.mp3\";\n                }\n                this.dataService.setupAudioIntroduction(audioFile);\n            }, 1000);\n\n            this.$timeout(() => {\n                this.opacity = 1;\n                this.dataService.playAudioIntroduction(0);\n            }, 2000);\n\n            this.$timeout(() => {\n                this.enlargeImages();\n            }, 4000);\n\n        }\n\n        setupImages() {\n            let vGap = 10, hGap = 10;\n\n            for (let n = 1; n < 4 ; n++) {\n                let list = this[\"draggableObjects\" + n];\n\n                    for (let position = 0; position < list.length; position++) {\n\n                        // Prepare the images for popping up from their center points\n                        list[position][\"style\"] = {\n                            \"position\": \"absolute\",\n                            \"top\": (this.iHeight + vGap) * Math.floor(position / 5) + Math.floor(this.iHeight / 2) + \"px\",\n                            \"left\": (this.iWidth + hGap) * (position % 5) + Math.floor(this.iWidth / 2) + \"px\",\n                            \"width\": \"0\",\n                            \"height\": \"0\"\n                        };\n                }\n            }\n        }\n\n        enlargeImages() {     // After a timeout to allow digest of the previous style, set the style to \"enlarge\" the images\n            let vGap = 10, hGap = 10;\n            let items = this[\"draggableObjects\" + this.round];\n            for (let position = 0; position < items.length; position++) {\n                items[position][\"style\"] = {\n                    \"position\": \"absolute\",\n                    \"top\": (this.iHeight + vGap) * Math.floor(position / 5) + \"px\",\n                    \"left\": (this.iWidth + hGap) * (position % 5) + \"px\",\n                    \"width\": this.iWidth + \"px\",\n                    \"height\": this.iHeight + \"px\"\n                };\n            }\n            this.$timeout(() => {\n                for (let position = 0; position < items.length; position++) {\n                    items[position][\"transition\"] = false;      // Transition effects dragging, so turn it off now\n                }\n            }, 1000);\n        }\n\n        driveOnPageOneCompleted() {\n            this.$scope[\"wpC\"].setAndShowOnetimeInternalForwardArrowCallback( () => {\n                this.page = 2;\n                this.introduction();\n            });\n        }\n\n        driveOffPageThreeCompleted() {\n            this.$scope[\"wpC\"].taskFinished();\n        }\n\n        static clickImage(filename) {\n            new Audio(filename).play();\n        }\n\n        closeVan() {\n            this.$timeout(() => {\n                this.vanIsClosed = true;\n                new Audio(\"content/common/audio/consolidation/task3/van-door.mp3\").play();\n                this.$timeout(() => {\n                    this.page = 3;\n                    new Audio(\"content/common/audio/consolidation/task3/van-driving.mp3\").play();\n                }, 500);\n            }, 1500);\n        }\n\n        onDropComplete = function(item: {}) {\n            new Audio(item[\"audio\"]).play();\n            if (item[\"correct\"]) {\n                let iWidth = 80, iHeight = 60, leftOffset = 90, topOffset = 122, shiftFactor = 1.5;\n                this.droppedObjects.push(item);\n                let itemIndex = this[\"draggableObjects\" + this.round].indexOf(item);\n                this[\"draggableObjects\" + this.round].splice(itemIndex, 1);\n                let i = this.droppedObjects.length - 1;\n                item[\"style\"] = {\n                    \"position\" : \"absolute\",\n                    \"top\" : topOffset + i * shiftFactor + \"px\",\n                    \"left\" : leftOffset - i * shiftFactor + \"px\",\n                    \"width\" : iWidth + (2 * i * shiftFactor) + \"px\",\n                    \"height\" : iHeight + (2 * i * shiftFactor) + \"px\",\n                    \"transform\": \"none\"\n                };\n                if (this.droppedObjects.length === 24) {\n                    this.opacity = 0;\n                    this.closeVan();\n                } else if (this.droppedObjects.length === 8 || this.droppedObjects.length === 16) {\n                    this.opacity = 0;\n                    this.introduction();\n                }\n            }\n\n        };\n\n        */\n\n    }\n}\n","/// <reference path=\"../../_references\"/>\n/// <reference path=\"../../models/models\"/>\n\nnamespace MorfologiApp.Controllers {\n    import ILocationService = angular.ILocationService;\n    import IScope = angular.IScope;\n\n    \"use strict\";\n\n    export class MainPanelController {\n        static $inject = [\"$http\", \"$location\", \"$scope\"];\n\n        private language = \"\";\n        private taskTemplateUrl: string;\n\n        constructor( private $http: ng.IHttpService,\n                     private $location: ILocationService,\n                     private $scope: IScope) {\n\n            this.initialise();\n        }\n\n        initialise() {\n           // this.language = this.dataService.getLanguage();\n        }\n\n        selectTask(taskType) {\n            this.taskTemplateUrl = \"js/tasks/task\" + taskType + \"/template.html\";\n        }\n\n    }\n}\n","/// <reference path=\"../../_references\"/>\n/// <reference path=\"../../models/models\"/>\n\nnamespace MorfologiApp.Controllers {\n    import ILocationService = angular.ILocationService;\n    import IScope = angular.IScope;\n\n    \"use strict\";\n\n    export class TestPanelController {\n        static $inject = [\"$http\", \"$location\", \"$scope\"];\n\n        private language = \"\";\n\n        constructor( private $http: ng.IHttpService,\n                     private $location: ILocationService,\n                     private $scope: IScope) {\n\n            this.initialise();\n        }\n\n        initialise() {\n           // this.language = this.dataService.getLanguage();\n        }\n\n    }\n}\n"],"sourceRoot":"/source/"}